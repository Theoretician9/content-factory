import time
import subprocess
from pathlib import Path
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

WATCHED_EXTENSIONS = ['.py', '.js', '.ts', '.json', '.env', '.sh', '.txt', '.md']
CHECK_INTERVAL = 30  # —Å–µ–∫—É–Ω–¥
HAS_CHANGES = False

class AutoGitHandler(FileSystemEventHandler):
    def on_any_event(self, event):
        global HAS_CHANGES
        # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –ò –Ω–µ –≤–Ω—É—Ç—Ä–∏ .git/
        if (not event.is_directory and 
            Path(event.src_path).suffix in WATCHED_EXTENSIONS and 
            '.git' not in event.src_path):
            HAS_CHANGES = True
            print(f"üü° –ò–∑–º–µ–Ω–µ–Ω–æ: {event.src_path}")

def has_real_changes():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    result = subprocess.run(['git', 'status', '--porcelain'], capture_output=True, text=True)
    return bool(result.stdout.strip())

def run_git_commit():
    try:
        if has_real_changes():
            subprocess.call(['git', 'add', '--all'])
            result = subprocess.run(['git', 'commit', '-m', 'Auto-commit every 30s'], capture_output=True, text=True)
            if result.returncode == 0:
                subprocess.call(['git', 'push'])
                print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã –∏ –∑–∞–ø—É—à–µ–Ω—ã")
            else:
                print("‚ÑπÔ∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞")
        else:
            print("‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞ (git status —á–∏—Å—Ç—ã–π)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–º–º–∏—Ç–µ/–ø—É—à–µ: {e}")

if __name__ == "__main__":
    print("üü¢ –°—Ç–∞—Ä—Ç —Å–ª–µ–∂–µ–Ω–∏—è. –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥ ‚Äî –∫–æ–º–º–∏—Ç –∏ –ø—É—à, –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è.")
    observer = Observer()
    event_handler = AutoGitHandler()
    observer.schedule(event_handler, path='.', recursive=True)
    observer.start()

    try:
        while True:
            time.sleep(CHECK_INTERVAL)
            if HAS_CHANGES:
                run_git_commit()
                # –ù–µ –Ω—É–∂–µ–Ω global –≤ –≥–ª–∞–≤–Ω–æ–º —Ü–∏–∫–ª–µ!
                HAS_CHANGES = False
    except KeyboardInterrupt:
        observer.stop()
    observer.join()
