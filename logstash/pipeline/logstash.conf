input {
  # Собираем логи из Docker контейнеров
  beats {
    port => 5044
  }

  # Собираем логи из файлов сервисов
  file {
    path => "/usr/share/logstash/logs/services/*.log"
    type => "service-logs"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    mode => "tail"
  }

  # Собираем логи из API Gateway
  file {
    path => "/usr/share/logstash/logs/api-gateway/*.log"
    type => "api-gateway"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    mode => "tail"
  }
}

filter {
  # Обработка логов API Gateway
  if [type] == "api-gateway" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }

  # Обработка общих логов сервисов
  if [type] == "service-logs" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
}

output {
  # Отправляем логи в Elasticsearch
  elasticsearch {
    hosts => ["http://92.113.146.148:9200"]
    index => "logs-%{+YYYY.MM.dd}"
    retry_on_conflict => 5
    retry_initial_interval => 5
    retry_max_interval => 30
    retry_on_timeout => true
    action => "index"
    timeout => 60
  }

  # Для отладки можно выводить в stdout
  stdout {
    codec => rubydebug
  }
} 