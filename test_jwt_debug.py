#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ JWT –æ–±—Ä–∞–±–æ—Ç–∫–∏ Integration Service.
"""

import requests
import jwt
import json
from datetime import datetime, timedelta

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE = "http://92.113.146.148:8000"
JWT_SECRET = "super-secret-jwt-key-for-content-factory-2024"

def create_jwt_token(user_id: int) -> str:
    """–°–æ–∑–¥–∞–µ—Ç JWT —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    payload = {
        "sub": str(user_id),
        "exp": datetime.utcnow() + timedelta(hours=1)
    }
    return jwt.encode(payload, JWT_SECRET, algorithm="HS256")

def test_jwt_processing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É JWT —Ç–æ–∫–µ–Ω–æ–≤"""
    print("üß™ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ JWT –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    tokens = {
        1: create_jwt_token(1),
        2: create_jwt_token(2),
        99: create_jwt_token(99)
    }
    
    for user_id, token in tokens.items():
        print(f"\nüë§ –¢–µ—Å—Ç –¥–ª—è user_id={user_id}")
        print(f"Token: {token[:50]}...")
        
        headers = {"Authorization": f"Bearer {token}"}
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º debug-jwt endpoint (–µ—Å–ª–∏ –µ—Å—Ç—å)
        try:
            response = requests.get(f"{API_BASE}/debug-jwt", headers=headers)
            print(f"Debug JWT - Status: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                extracted_user_id = data.get("extracted_user_id")
                print(f"  Extracted user_id: {extracted_user_id}")
                if extracted_user_id == user_id:
                    print("  ‚úÖ JWT –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
                else:
                    print("  ‚ùå –û–®–ò–ë–ö–ê JWT –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
            else:
                print(f"  Error: {response.text}")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ debug-jwt: {e}")
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã–π accounts endpoint  
        try:
            response = requests.get(f"{API_BASE}/api/v1/telegram/accounts", headers=headers)
            print(f"Accounts - Status: {response.status_code}")
            if response.status_code == 200:
                accounts = response.json()
                print(f"  –ù–∞–π–¥–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(accounts)}")
                for acc in accounts:
                    acc_user_id = acc.get("user_id")
                    print(f"    Account {acc['id']}: user_id={acc_user_id}")
                    if acc_user_id != user_id:
                        print(f"    ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï –ò–ó–û–õ–Ø–¶–ò–ò: –æ–∂–∏–¥–∞–ª—Å—è user_id={user_id}, –ø–æ–ª—É—á–µ–Ω {acc_user_id}")
            else:
                print(f"  Error: {response.text}")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ accounts: {e}")

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    print(f"\nüîí –¢–µ—Å—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    try:
        response = requests.get(f"{API_BASE}/api/v1/telegram/accounts")
        print(f"No auth - Status: {response.status_code}")
        if response.status_code == 401:
            print("  ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø")
        else:
            print(f"  ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    test_jwt_processing() 