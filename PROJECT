# PROJECT — Полное описание проекта

> **Этот файл — основное описание проекта. Здесь всегда хранится актуальное, максимально подробное описание архитектуры, сервисов, инфраструктуры, статуса и принципов работы. Любой новый участник может ознакомиться с этим файлом и сразу понять, как устроен проект, что реализовано, а что ещё нет. Все изменения должны своевременно отражаться здесь.**

## Назначение
SaaS-платформа для автоматизации маркетинга, генерации контента и мультиканальных воронок.

## Архитектура
- Микросервисная архитектура
- Каждый сервис — отдельный контейнер
- Взаимодействие через API Gateway и backend-сеть
- Все сервисы и инфраструктурные компоненты работают в Docker Compose

## Технологии
- Python (FastAPI)
- MySQL
- Redis
- RabbitMQ
- Nginx
- Prometheus
- Grafana
- Vault
- Elasticsearch
- Kibana
- Logstash
- Docker Compose

## Инфраструктура
- ✅ Docker Compose настроен и работает
- ✅ Единая сеть backend для всех сервисов
- ✅ Volume для хранения данных (MySQL, Redis, RabbitMQ, Elasticsearch, Vault)
- ✅ Все базовые сервисы (MySQL, Redis, RabbitMQ, Vault, Prometheus, Grafana, ELK) работают и доступны
- ✅ Все volumes и сети корректно проброшены
- ✅ Нет лишних открытых портов наружу
- ⚠️ Админские сервисы (Grafana, Prometheus, Kibana, Alertmanager, Vault) доступны только из внутренней docker-сети или через SSH-туннель. Наружу открыты только 80 и 443 для публичных сервисов (API Gateway, фронт).

## База данных
- ✅ MySQL запущен и доступен на порту 3307
- ✅ Создана база данных integration_service
- ✅ Настроен пользователь telegraminvi с необходимыми правами
- ❌ Остальные базы данных для сервисов ещё не созданы
- ❌ Не настроены миграции и схемы баз данных

## ELK Stack (Elasticsearch, Logstash, Kibana)
- ✅ Elasticsearch запущен, доступен на порту 9200, индексы создаются корректно
- ✅ Logstash запущен, читает логи из /var/www/html/logs/services/ и /var/www/html/logs/api-gateway/ (volume проброшен абсолютным путём)
- ✅ Тестовые логи обработаны, индекс logs-YYYY.MM.DD появляется в Elasticsearch
- ✅ Документы содержат поля: @timestamp, level, message, type и др.
- ⚠️ Kibana: index pattern logs-* создаётся, но поле Timestamp field неактивно (вечная загрузка) — будет решено после появления реальных логов
- ⚠️ Визуализации и дашборды будут настраиваться после поступления реальных логов

## Мониторинг
- ✅ Prometheus запущен (только во внутренней сети)
- ✅ Grafana запущена (только во внутренней сети)
- ✅ Grafana и Prometheus находятся в одной docker-сети, интеграция подтверждена
- ✅ Grafana успешно видит Prometheus по адресу http://prometheus:9090
- ✅ Метрики с MySQL, RabbitMQ, Redis, а также с backend-сервисов собираются (экспортеры работают)
- ⚠️ Для доступа к Grafana, Prometheus, Kibana, Alertmanager используйте SSH-туннель
- ❌ Не настроены пользовательские дашборды в Grafana (можно создавать)

## Сервисы
- ✅ API Gateway запущен и доступен на порту 8000
- ✅ Integration Service запущен
- ❌ Остальные микросервисы (User, Billing, Scenario, Content, Invite, Parsing) ещё не протестированы
- ❌ Не настроено взаимодействие между сервисами
- ❌ Не протестированы API эндпоинты

## Безопасность
- ✅ Vault запущен (только во внутренней сети)
- ✅ Настроен root token для Vault
- ✅ Проброс портов для админских сервисов убран, доступ только через внутреннюю сеть или SSH-туннель
- ❌ Не настроено хранение секретов в Vault
- ❌ Не настроен HTTPS
- ❌ Не настроен firewall

## Очереди и кэширование
- ✅ Redis запущен и доступен на порту 6380
- ✅ RabbitMQ запущен и доступен на портах 5672, 15672, 15692
- ❌ Не настроены очереди в RabbitMQ
- ❌ Не настроено кэширование в Redis

## Доступы
- API Gateway: http://92.113.146.148:8000 (будет http/https, публично)
- Grafana: только через SSH-туннель (локально http://localhost:3000)
- Kibana: только через SSH-туннель (локально http://localhost:5601)
- Prometheus: только через SSH-туннель (локально http://localhost:9090)
- Alertmanager: только через SSH-туннель (локально http://localhost:9093)
- RabbitMQ: http://92.113.146.148:15672 (user/password)
- MySQL root: root/Lfnm97HnPug8
- MySQL user: telegraminvi/szkTgBhWh6XU
- Vault: только через SSH-туннель (локально http://localhost:8201, root token)

### Безопасность и доступ к админским сервисам
- Все админские сервисы (Grafana, Prometheus, Alertmanager, Kibana, Vault, RabbitMQ Management, Logstash Monitoring, Elasticsearch) проброшены только на 127.0.0.1 сервера.
- Доступ к ним возможен только через SSH-туннель.
- Наружу открыты только порты 80 и 443.
- Админские интерфейсы полностью изолированы от внешнего мира.

---
> **В этом файле не ведётся хронология изменений! Только актуальное состояние и описание. Для истории изменений используйте project-status.md** 