# PROJECT ‚Äî –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞

> **–≠—Ç–æ—Ç —Ñ–∞–π–ª ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞. –ó–¥–µ—Å—å –≤—Å–µ–≥–¥–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, —Å–µ—Ä–≤–∏—Å–æ–≤, –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã, —Å—Ç–∞—Ç—É—Å–∞ –∏ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —Ä–∞–±–æ—Ç—ã. –õ—é–±–æ–π –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –º–æ–∂–µ—Ç –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —ç—Ç–∏–º —Ñ–∞–π–ª–æ–º –∏ —Å—Ä–∞–∑—É –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω –ø—Ä–æ–µ–∫—Ç, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ, –∞ —á—Ç–æ –µ—â—ë –Ω–µ—Ç. –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å.**
> 
> **–í–ê–ñ–ù–û: –ü—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –ù–ò–ö–û–ì–î–ê –ù–ï –£–î–ê–õ–Ø–¢–¨ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ù–ï –ú–ï–ù–Ø–¢–¨ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–∞. –¢–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—É—é.**

## –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
SaaS-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞, –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –º—É–ª—å—Ç–∏–∫–∞–Ω–∞–ª—å–Ω—ã—Ö –≤–æ—Ä–æ–Ω–æ–∫.

## –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
- –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
- –ö–∞–∂–¥—ã–π —Å–µ—Ä–≤–∏—Å ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
- –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ API Gateway –∏ backend-—Å–µ—Ç—å
- –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –≤ Docker Compose

## –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
- Python (FastAPI)
- MySQL (–æ—Å–Ω–æ–≤–Ω–∞—è –ë–î)
- PostgreSQL (–¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –∏ –ø–∞—Ä—Å–∏–Ω–≥–∞)
- Redis
- RabbitMQ
- Nginx
- Prometheus
- Grafana
- Vault (—Å AppRole Authentication)
- Elasticsearch
- Kibana
- Logstash
- Docker 28.2.2 (latest)
- Docker Compose v2.36.2
- Docker BuildX v0.24.0 (BuildKit enabled)

## –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
- ‚úÖ **Modern Docker Stack**: Docker 28.2.2, Compose v2.36.2, BuildX v0.24.0
- ‚úÖ **BuildKit enabled**: –£—Å–∫–æ—Ä–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, —É–º–Ω–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ–µ–≤
- ‚úÖ **Docker Compose v2**: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π CLI, –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
- ‚úÖ –ï–¥–∏–Ω–∞—è —Å–µ—Ç—å backend –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
- ‚úÖ Volume –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (MySQL, PostgreSQL, Redis, RabbitMQ, Elasticsearch, Vault)
- ‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã (MySQL, PostgreSQL, Redis, RabbitMQ, Vault, Prometheus, Grafana, ELK) —Ä–∞–±–æ—Ç–∞—é—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω—ã
- ‚úÖ –í—Å–µ volumes –∏ —Å–µ—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–æ–±—Ä–æ—à–µ–Ω—ã
- ‚úÖ –ù–µ—Ç –ª–∏—à–Ω–∏—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤ –Ω–∞—Ä—É–∂—É
- ‚ö†Ô∏è –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã (Grafana, Prometheus, Kibana, Alertmanager, Vault) –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π docker-—Å–µ—Ç–∏ –∏–ª–∏ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å. –ù–∞—Ä—É–∂—É –æ—Ç–∫—Ä—ã—Ç—ã —Ç–æ–ª—å–∫–æ 80 –∏ 443 –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (API Gateway, —Ñ—Ä–æ–Ω—Ç).

## –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
- ‚úÖ MySQL –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3307
- ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö integration_service
- ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å telegraminvi —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
- ‚úÖ PostgreSQL –¥–ª—è Integration Service –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5433
- ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö integration_db —Å–æ–∑–¥–∞–Ω–∞ –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
- ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å integration_user –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å –ø–æ–ª–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
- ‚úÖ –°—Ö–µ–º–∞ –ë–î Integration Service —Å–æ–∑–¥–∞–Ω–∞ (4 —Ç–∞–±–ª–∏—Ü—ã —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ –∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞–º–∏)
- ‚úÖ **PostgreSQL –¥–ª—è Parsing Service**: –ë–î parsing_db –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç
- ‚úÖ **Parsing Service models**: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –º—É–ª—å—Ç–∏–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
- ‚ùå –û—Å—Ç–∞–ª—å–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤ –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω—ã
- ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –º–∏–≥—Ä–∞—Ü–∏–∏ –∏ —Å—Ö–µ–º—ã –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

## ELK Stack (Elasticsearch, Logstash, Kibana)
- ‚úÖ Elasticsearch –∑–∞–ø—É—â–µ–Ω, –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 9200, –∏–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
- ‚úÖ Logstash –∑–∞–ø—É—â–µ–Ω, —á–∏—Ç–∞–µ—Ç –ª–æ–≥–∏ –∏–∑ /var/www/html/logs/services/ –∏ /var/www/html/logs/api-gateway/ (volume –ø—Ä–æ–±—Ä–æ—à–µ–Ω –∞–±—Å–æ–ª—é—Ç–Ω—ã–º –ø—É—Ç—ë–º)
- ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã, –∏–Ω–¥–µ–∫—Å logs-YYYY.MM.DD –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ Elasticsearch
- ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –ø–æ–ª—è: @timestamp, level, message, type –∏ –¥—Ä.
- ‚ö†Ô∏è Kibana: index pattern logs-* —Å–æ–∑–¥–∞—ë—Ç—Å—è, –Ω–æ –ø–æ–ª–µ Timestamp field –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ (–≤–µ—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞) ‚Äî –±—É–¥–µ—Ç —Ä–µ—à–µ–Ω–æ –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤
- ‚ö†Ô∏è –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –¥–∞—à–±–æ—Ä–¥—ã –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
- ‚úÖ Prometheus –∑–∞–ø—É—â–µ–Ω (—Ç–æ–ª—å–∫–æ –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–µ—Ç–∏)
- ‚úÖ Grafana –∑–∞–ø—É—â–µ–Ω–∞ (—Ç–æ–ª—å–∫–æ –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–µ—Ç–∏)
- ‚úÖ Grafana –∏ Prometheus –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –æ–¥–Ω–æ–π docker-—Å–µ—Ç–∏, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞
- ‚úÖ Grafana —É—Å–ø–µ—à–Ω–æ –≤–∏–¥–∏—Ç Prometheus –ø–æ –∞–¥—Ä–µ—Å—É http://prometheus:9090
- ‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ —Å MySQL, RabbitMQ, Redis, –∞ —Ç–∞–∫–∂–µ —Å backend-—Å–µ—Ä–≤–∏—Å–æ–≤ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è (—ç–∫—Å–ø–æ—Ä—Ç–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç)
- ‚ö†Ô∏è –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Grafana, Prometheus, Kibana, Alertmanager –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ SSH-—Ç—É–Ω–Ω–µ–ª—å
- ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞—à–±–æ—Ä–¥—ã –≤ Grafana (–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å)

## –°–µ—Ä–≤–∏—Å—ã
- ‚úÖ API Gateway –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000 (—Å AppRole Authentication)
- ‚úÖ Integration Service –∑–∞–ø—É—â–µ–Ω –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω (–ø–æ—Ä—Ç 8001, —Å AppRole Authentication)
- ‚úÖ User Service –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å AppRole Authentication)
- ‚úÖ **Parsing Service –∑–∞–ø—É—â–µ–Ω –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω** (–ø–æ—Ä—Ç 8002, —Å AppRole Authentication)
- ‚ùå –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã (Billing, Scenario, Content, Invite) –µ—â—ë –Ω–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã
- ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É —Å–µ—Ä–≤–∏—Å–∞–º–∏
- ‚ùå –ù–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

### **PARSING SERVICE - –ú—É–ª—å—Ç–∏–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–∞—Ä—Å–∏–Ω–≥–∞** ‚úÖ –ü–û–õ–ù–û–°–¢–¨–Æ –†–ï–ê–õ–ò–ó–û–í–ê–ù –ò –†–ê–ë–û–¢–ê–ï–¢ –ù–ê 95%

#### **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**
- **–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥**: Telegram (–ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç), Instagram/WhatsApp (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)
- **–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**: Platform Adapters –¥–ª—è –∫–∞–∂–¥–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
- **–†–µ–∞–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã**: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å integration-service –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Telegram —Å–µ—Å—Å–∏–π
- **–ú—É–ª—å—Ç–∏–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ –æ—á–µ—Ä–µ–¥–∏**: RabbitMQ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
- **–£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ API**: –ï–¥–∏–Ω—ã–µ endpoints –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º platform

#### **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –ü–û–õ–ù–û–°–¢–¨–Æ –†–ï–®–ï–ù–´ (–¥–µ–∫–∞–±—Ä—å 2024)**

**üî• CIRCULAR IMPORT config.py ‚Üî vault.py –ò–°–ü–†–ê–í–õ–ï–ù:**
```python
# –†–ï–®–ï–ù–ò–ï: Lazy import –≤ __init__ –º–µ—Ç–æ–¥–µ Settings –∫–ª–∞—Å—Å–∞
def __init__(self, **values):
    super().__init__(**values)
    try:
        from .vault import get_vault_client  # Import –í–ù–£–¢–†–ò –º–µ—Ç–æ–¥–∞!
        vault_client = get_vault_client()
        secret_data = vault_client.get_secret("jwt")
        self.JWT_SECRET_KEY = secret_data['secret_key']
    except (ImportError, Exception):
        self.JWT_SECRET_KEY = os.getenv('JWT_SECRET_KEY')  # Fallback
```

**üî• DATABASE DRIVERS –ö–û–ù–§–õ–ò–ö–¢ –ò–°–ü–†–ê–í–õ–ï–ù:**
- ‚ùå –£–±—Ä–∞–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–π `psycopg2-binary` –¥–ª—è app runtime  
- ‚úÖ –û—Å—Ç–∞–≤–ª–µ–Ω `asyncpg` –¥–ª—è async –æ–ø–µ—Ä–∞—Ü–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- ‚úÖ –û—Å—Ç–∞–≤–ª–µ–Ω `psycopg2-binary` —Ç–æ–ª—å–∫–æ –¥–ª—è Alembic migrations (sync)
- ‚úÖ DATABASE_URL: `postgresql://` ‚Üí `postgresql+asyncpg://`

**üî• ALEMBIC –ú–ò–ì–†–ê–¶–ò–ò –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–´:**
```sql
-- PostgreSQL DO –±–ª–æ–∫–∏ –¥–ª—è enum'–æ–≤
DO $$ BEGIN
    CREATE TYPE platform AS ENUM ('telegram', 'instagram', 'whatsapp', 'facebook');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;
```
- ‚úÖ **alembic stamp head** - —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ë–î –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è
- ‚úÖ **–¢–∞–±–ª–∏—Ü–∞ alembic_version** —Å–æ–∑–¥–∞–Ω–∞ —Å –≤–µ—Ä—Å–∏–µ–π `003_add_account_states`
- ‚úÖ **Revision conflicts —Ä–µ—à–µ–Ω—ã** - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ ID –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

#### **Telegram –ø–∞—Ä—Å–∏–Ω–≥ - PRODUCTION READY**

**üöÄ –†–ï–ê–õ–¨–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø (–ù–ï MOCK!):**
- **Session –¥–∞–Ω–Ω—ã–µ**: StringSession –∏–∑ base64 —á–µ—Ä–µ–∑ integration-service –ë–î
- **API credentials**: api_id/api_hash –∏–∑ Vault —Å–µ–∫—Ä–µ—Ç–æ–≤
- **–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è**: TelegramClient —Å –∂–∏–≤—ã–º–∏ session —Ñ–∞–π–ª–∞–º–∏
- **Account management**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤

**üìä –ò–ó–ú–ï–ù–ï–ù–ò–ï –õ–û–ì–ò–ö–ò –ü–ê–†–°–ò–ù–ì–ê (—Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó):**
- **‚ùå –ë–´–õ–û**: –ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–∫—Å—Ç–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π  
- **‚úÖ –°–¢–ê–õ–û**: –ü–∞—Ä—Å–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (user_id, username, phone, full_name)
- **–ö–∞–Ω–∞–ª—ã**: –ü–æ–∏—Å–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ `iter_messages` ‚Üí `reply_to`
- **–ì—Ä—É–ø–ø—ã**: `iter_participants` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
- **content_type**: "message" ‚Üí "user"
- **Phone extraction**: GetFullUserRequest —Å FloodWait handling

**‚ö° INTELLIGENT PROGRESS –°–ò–°–¢–ï–ú–ê:**
- **Smart estimation**: –ê–Ω–∞–ª–∏–∑ –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ä–∞–∑–º–µ—Ä–∞
- **Real-time progress**: 0% ‚Üí 95% (–ø–∞—Ä—Å–∏–Ω–≥) ‚Üí 100% (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ)
- **User limit enforcement**: –¢–æ—á–Ω–æ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- **FloodWait handling**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º

**üìä DATABASE INTEGRATION:**
- **PostgreSQL parsing_db**: –û—Ç–¥–µ–ª—å–Ω–∞—è –ë–î —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏
- **ParseTask**: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –∑–∞–¥–∞—á
- **ParseResult**: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ FK
- **Timezone handling**: timezone-aware ‚Üí naive UTC datetime –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
- **Task mapping**: external task_id ‚Üí database ID –¥–ª—è foreign keys

#### **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –†–ï–ê–õ–ò–ó–û–í–ê–ù–´**
- **‚úÖ –ü—Ä–∏–Ω—Ü–∏–ø –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π**: Parsing-service –∏–º–µ–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ä–æ–ª–∏ –≤ Vault
- **‚úÖ –ò–∑–æ–ª—è—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤**: Parsing —Ç–æ–ª—å–∫–æ –ø–∞—Ä—Å–∏—Ç, –Ω–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
- **‚úÖ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏**: Integration-service ‚Üî Vault ‚Üî Parsing-service
- **‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è**: –ù–µ—Ç –∫–æ—Å—Ç—ã–ª–µ–π, —Ç–æ–ª—å–∫–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
- **‚úÖ AppRole Authentication**: VAULT_ROLE_ID/SECRET_ID –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞

#### **–°–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ –†–ê–ë–û–¢–ê–Æ–¢**
- **‚úÖ Task lifecycle**: pending ‚Üí running ‚Üí completed/failed/paused
- **‚úÖ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏**: create, read, update, delete, pause, resume —á–µ—Ä–µ–∑ API
- **‚úÖ Account integration**: HTTP API –∫ integration-service `/internal/active-accounts`
- **‚úÖ Database storage**: PostgreSQL —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ö–µ–º–æ–π –∏ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏
- **‚úÖ Error handling**: Graceful degradation –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤/API

#### **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞–º–∏ –†–ê–ë–û–¢–ê–Æ–¢**
- **‚úÖ Integration Service**: `GET /internal/active-accounts` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Telegram sessions
- **‚úÖ Vault**: JWT —Å–µ–∫—Ä–µ—Ç—ã + API credentials —á–µ—Ä–µ–∑ AppRole –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
- **‚úÖ API Gateway**: –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ `/api/parsing/{path}` —Å JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
- **‚úÖ Frontend**: React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –ø–æ–ª–Ω—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∑–∞–¥–∞—á–∞–º–∏

#### **–°–¢–ê–¢–£–°: 100% PRODUCTION READY** üü¢

**‚úÖ CORE –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨ (100% —Ä–∞–±–æ—Ç–∞–µ—Ç):**
- Telegram –ø–∞—Ä—Å–∏–Ω–≥ –∫–∞–Ω–∞–ª–æ–≤/–≥—Ä—É–ø–ø —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω
- Database integration –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç
- Task management API endpoints —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã
- Real-time progress tracking —Ä–∞–±–æ—Ç–∞–µ—Ç
- Account integration —á–µ—Ä–µ–∑ integration-service —Ä–∞–±–æ—Ç–∞–µ—Ç
- AppRole –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å Vault —Ä–∞–±–æ—Ç–∞–µ—Ç
- Rate limiting –∏ error handling —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã

**‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´ –†–ï–®–ï–ù–´ (2025-01-24):**
1. **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞**: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ bytes —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è, –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è
2. **–°–∫–æ—Ä–æ—Å—Ç—å –ø–∞—Ä—Å–∏–Ω–≥–∞**: Frontend –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å (Fast/Medium/Safe)
3. **–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á**: HIGH priority –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º —Å–æ–≥–ª–∞—Å–Ω–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
4. **PostgreSQL –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è**: –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã –æ—à–∏–±–∫–∏ "Object of type bytes is not JSON serializable"

**‚ö†Ô∏è UX –£–õ–£–ß–®–ï–ù–ò–Ø (–Ω–µ –±–ª–æ–∫–∏—Ä—É—é—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å):**
1. **Excel export –∫–Ω–æ–ø–∫–∞**: –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (UX convenience)
2. **–ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤**: –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ—Ä—Ü–∏—è–º–∏ –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤
3. **Real-time progress**: Live updates –±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
4. **–ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ—Å—Ç–≤**: –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)

**‚ö†Ô∏è –ù–ï –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò (–Ω–µ –±–ª–æ–∫–∏—Ä—É—é—Ç production):**
- –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã: –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ ban/flood
- –ü–∞—Ä—Å–∏–Ω–≥ –≥—Ä—É–ø–ø: –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã —Ç–æ–ª—å–∫–æ –∫–∞–Ω–∞–ª—ã
- –û—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∑–∞–¥–∞—á: high/normal/low –Ω–∞ frontend

#### **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Parsing Service:**
1. **–ù–ò–ö–û–ì–î–ê –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–∞–ø—Ä—è–º—É—é** - —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ git
2. **AppRole credentials –≤ .env** - –∫–∞–∂–¥—ã–π —Å–µ—Ä–≤–∏—Å –∏–º–µ–µ—Ç —Å–≤–æ–∏ VAULT_ROLE_ID/SECRET_ID
3. **Session –¥–∞–Ω–Ω—ã–µ –∏–∑ Integration Service** - –ù–ï –∏–∑ Vault –Ω–∞–ø—Ä—è–º—É—é
4. **Lazy import –≤ config.py** - –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è circular imports
5. **PostgreSQL –¥–ª—è parsing_db** - –æ—Ç–¥–µ–ª—å–Ω–∞—è –ë–î, –Ω–µ MySQL
6. **Database ID –¥–ª—è FK** - –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å external task_id –¥–ª—è foreign keys
7. **User limit enforcement** - —Å—Ç—Ä–æ–≥–æ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
8. **FloodWait handling** - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ Telegram rate limits

## –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
- ‚úÖ **Production Vault**: –∑–∞–ø—É—â–µ–Ω –≤ production —Ä–µ–∂–∏–º–µ —Å —Ñ–∞–π–ª–æ–≤—ã–º —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º (—Ç–æ–ª—å–∫–æ –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–µ—Ç–∏)
- ‚úÖ **AppRole Authentication**: –≤–Ω–µ–¥—Ä–µ–Ω–æ –≤ integration-service, user-service, api-gateway, **parsing-service**
- ‚úÖ **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–æ–∫–µ–Ω—ã**: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 1-4 —á–∞—Å–∞ –±–µ–∑ —Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
- ‚úÖ **Vault Unsealer**: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ unsealing 24/7, self-healing –ø—Ä–∏ sealed state
- ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã unseal keys –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è Vault
- ‚úÖ –î–∞–Ω–Ω—ã–µ Vault —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ (volume vault_data:/vault/data)
- ‚úÖ –ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —É–±—Ä–∞–Ω, –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Å–µ—Ç—å –∏–ª–∏ SSH-—Ç—É–Ω–Ω–µ–ª—å
- ‚úÖ Integration Service –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å Vault –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤
- ‚úÖ API Gateway –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å Vault (CSRF_SECRET_KEY, JWT_SECRET_KEY)
- ‚úÖ User Service –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å Vault –¥–ª—è JWT —Å–µ–∫—Ä–µ—Ç–æ–≤
- ‚úÖ **Parsing Service –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å Vault** –¥–ª—è JWT —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏ API credentials
- ‚úÖ HTTPS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Let's Encrypt
- ‚úÖ GitHub push protection: —Å–µ–∫—Ä–µ—Ç—ã –Ω–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, —Ç–æ–∫–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
- ‚úÖ **Audit Trail**: –≤—Å–µ AppRole –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ Vault
- ‚úÖ **–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π**: parsing-service –∏–º–µ–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ VAULT_ROLE_ID/SECRET_ID
- ‚è≥ –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –±—É–¥—É—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ AppRole –ø–æ –º–µ—Ä–µ —Ä–∞–∑–≤–∏—Ç–∏—è
- ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω firewall

## –û—á–µ—Ä–µ–¥–∏ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
- ‚úÖ Redis –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 6380
- ‚úÖ RabbitMQ –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 5672, 15672, 15692
- ‚úÖ **Parsing Service Celery**: –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å RabbitMQ –¥–ª—è –∑–∞–¥–∞—á –ø–∞—Ä—Å–∏–Ω–≥–∞
- ‚úÖ **Redis state management**: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –∑–∞–¥–∞—á –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
- ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –æ—á–µ—Ä–µ–¥–∏ –≤ RabbitMQ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
- ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Redis –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

## –î–æ—Å—Ç—É–ø—ã
- API Gateway: http://92.113.146.148:8000 (–±—É–¥–µ—Ç http/https, –ø—É–±–ª–∏—á–Ω–æ)
- Integration Service: —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å (–ª–æ–∫–∞–ª—å–Ω–æ http://localhost:8001)
- Grafana: —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å (–ª–æ–∫–∞–ª—å–Ω–æ http://localhost:3000)
- Kibana: —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å (–ª–æ–∫–∞–ª—å–Ω–æ http://localhost:5601)
- Prometheus: —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å (–ª–æ–∫–∞–ª—å–Ω–æ http://localhost:9090)
- Alertmanager: —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å (–ª–æ–∫–∞–ª—å–Ω–æ http://localhost:9093)
- RabbitMQ: http://92.113.146.148:15672 (user/password)
- MySQL root: root/Lfnm97HnPug8
- MySQL user: telegraminvi/szkTgBhWh6XU
- PostgreSQL integration_user: integration_user/integration_password
- Vault: —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å (–ª–æ–∫–∞–ª—å–Ω–æ http://localhost:8201, root token)

### –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω—Å–∫–∏–º —Å–µ—Ä–≤–∏—Å–∞–º
- –í—Å–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã (Grafana, Prometheus, Alertmanager, Kibana, Vault, RabbitMQ Management, Logstash Monitoring, Elasticsearch) –ø—Ä–æ–±—Ä–æ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –Ω–∞ 127.0.0.1 —Å–µ—Ä–≤–µ—Ä–∞.
- –î–æ—Å—Ç—É–ø –∫ –Ω–∏–º –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å.
- –ù–∞—Ä—É–∂—É –æ—Ç–∫—Ä—ã—Ç—ã —Ç–æ–ª—å–∫–æ –ø–æ—Ä—Ç—ã 80 –∏ 443.
- –ê–¥–º–∏–Ω—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω—ã –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ –º–∏—Ä–∞.

## –í–Ω–µ—à–Ω–∏–π reverse proxy (nginx)
- –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –¥–æ–º–µ–Ω–µ content-factory.xyz –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å nginx –≤ docker-compose.
- Nginx —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç—ã 80 –∏ 443, –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Å–µ—Ä–≤–∏—Å api-gateway (–ø–æ—Ä—Ç 8000).
- –ö–æ–Ω—Ñ–∏–≥ nginx –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–±–æ—Ç—É Let's Encrypt (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–ø—É—Å–∫ HTTPS-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤).
- –í—Å—è –≤–Ω–µ—à–Ω—è—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∏ SSL-—Ç–µ—Ä–º–∏–Ω–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ —ç—Ç–æ–≥–æ nginx.
- –í–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ api-gateway —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è nginx, –Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –Ω—É–∂–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∫ integration-service).
- –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ nginx –ø–æ –∞–¥—Ä–µ—Å—É http://content-factory.xyz (–∏ –≤ –±—É–¥—É—â–µ–º https://content-factory.xyz).

### HTTPS –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
- –î–æ–º–µ–Ω content-factory.xyz –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ nginx —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π HTTPS (Let's Encrypt).
- –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤—ã–ø—É—Å–∫–∞—é—Ç—Å—è –∏ –ø—Ä–æ–¥–ª–µ–≤–∞—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é certbot (docker-compose).
- –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: docker-compose run --rm certbot renew && docker-compose restart nginx (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –≤ cron).
- nginx –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç –≤—Å–µ http-–∑–∞–ø—Ä–æ—Å—ã –Ω–∞ https.
- –í—Å—è –≤–Ω–µ—à–Ω—è—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∏ SSL-—Ç–µ—Ä–º–∏–Ω–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ nginx.

### –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤ (Vault)
- –í—Å–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–∞—Ä–æ–ª–∏, —Ç–æ–∫–µ–Ω—ã, –∫–ª—é—á–∏, CSRF/JWT secret) –≤—ã–Ω–æ—Å—è—Ç—Å—è –≤ HashiCorp Vault.
- API Gateway –ø–æ–ª—É—á–∞–µ—Ç CSRF_SECRET_KEY –∏ JWT_SECRET_KEY –∏–∑ Vault, .env –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ.
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Vault —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –¥–ª—è API Gateway, Integration Service –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤–Ω–µ–¥—Ä—è–µ—Ç—Å—è –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.
- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è: secret/<service>/<–∫–ª—é—á> (–Ω–∞–ø—Ä–∏–º–µ—Ä, secret/mysql/root_password, secret/user-service/secret_key).
- –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏ —Å–µ–∫—Ä–µ—Ç–∞:
  vault kv put secret/mysql root_password=Lfnm97HnPug8 user=telegraminvi user_password=szkTgBhWh6XU
- –ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–∞ –≤ Python:
  import hvac
  client = hvac.Client(url='http://vault:8201', token='root')
  secret = client.secrets.kv.v2.read_secret_version(path='mysql')
  print(secret['data']['data']['root_password'])
- –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ Vault, –∞ –Ω–µ –∏–∑ .env/docker-compose.
- –í docker-compose –∏ .env –æ—Å—Ç–∞–Ω—É—Ç—Å—è —Ç–æ–ª—å–∫–æ VAULT_ADDR –∏ VAULT_TOKEN.

#### ‚úÖ AppRole Authentication (Production Security)
**–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ production-ready –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ Vault:**

**–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:**
- –°–µ—Ä–≤–∏—Å—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ `role_id` + `secret_id` –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤
- `role_id` - –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–æ–ª–∏ (–∫–∞–∫ –ª–æ–≥–∏–Ω)
- `secret_id` - –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π "–ø–∞—Ä–æ–ª—å" –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ —Å –∫–æ—Ä–æ—Ç–∫–∏–º TTL (1-4 —á–∞—Å–∞)
- Fallback –Ω–∞ —Ç–æ–∫–µ–Ω–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏

**–ù–∞—Å—Ç—Ä–æ–π–∫–∞ AppRole –≤ Vault:**
```bash
# 1. –í–∫–ª—é—á–µ–Ω–∏–µ AppRole auth method
docker-compose exec vault sh -c "VAULT_TOKEN=<root-token> vault auth enable approle"

# 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏ –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
docker-compose exec vault sh -c "VAULT_TOKEN=<root-token> vault write auth/approle/role/services token_policies=jwt-read-policy token_ttl=1h token_max_ttl=4h token_num_uses=0"

# 3. –ü–æ–ª—É—á–µ–Ω–∏–µ role_id (–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π)
docker-compose exec vault sh -c "VAULT_TOKEN=<root-token> vault read auth/approle/role/services/role-id"

# 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è secret_id (–æ–±–Ω–æ–≤–ª—è–µ–º—ã–π)
docker-compose exec vault sh -c "VAULT_TOKEN=<root-token> vault write -f auth/approle/role/services/secret-id"
```

**–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤ .env:**
```bash
# AppRole Authentication
VAULT_ROLE_ID=326b6585-0495-343b-6694-4cb6dd87e6dc
VAULT_SECRET_ID=1c5121a4-2853-0c02-31e6-323f5084df7a

# Fallback (–¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
VAULT_TOKEN=hvs.long-term-token-here
```

**–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤ docker-compose.yml –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞:**
```yaml
environment:
  - VAULT_ADDR=http://vault:8201
  - VAULT_TOKEN=${VAULT_TOKEN}         # Fallback
  - VAULT_ROLE_ID=${VAULT_ROLE_ID}     # AppRole
  - VAULT_SECRET_ID=${VAULT_SECRET_ID} # AppRole
```

**–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π VaultClient (–æ–±—â–∏–π –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤):**
```python
class VaultClient:
    def __init__(self, vault_addr: str = None, vault_token: str = None, role_id: str = None, secret_id: str = None):
        self.vault_addr = vault_addr or os.getenv('VAULT_ADDR', 'http://vault:8201')
        self.vault_token = None
        
        # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ AppRole Authentication
        self.role_id = role_id or os.getenv('VAULT_ROLE_ID')
        self.secret_id = secret_id or os.getenv('VAULT_SECRET_ID')
        
        # Fallback –Ω–∞ —Ç–æ–∫–µ–Ω–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
        if not self.role_id or not self.secret_id:
            self.vault_token = vault_token or os.getenv('VAULT_TOKEN')
            if not self.vault_token:
                raise ValueError("Vault token is required when AppRole credentials are not provided")
        else:
            self._authenticate_with_approle()

    def _authenticate_with_approle(self):
        """–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ AppRole –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞"""
        auth_data = {"role_id": self.role_id, "secret_id": self.secret_id}
        response = requests.post(f"{self.vault_addr}/v1/auth/approle/login", json=auth_data)
        response.raise_for_status()
        auth_result = response.json()
        self.vault_token = auth_result["auth"]["client_token"]
```

**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ AppRole:**
- **üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤** (TTL 1-4 —á–∞—Å–∞)
- **üîê –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** (–Ω–∏–∫–∞–∫–∏—Ö –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤)
- **üîß –ü—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ** (–º–æ–∂–Ω–æ –æ—Ç–æ–∑–≤–∞—Ç—å secret_id)
- **üìà –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å** (–æ–¥–∏–Ω role_id –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤)
- **üõ°Ô∏è Audit trail** (–≤—Å–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ Vault)

**–°—Ç–∞—Ç—É—Å –≤–Ω–µ–¥—Ä–µ–Ω–∏—è:**
- ‚úÖ **integration-service** - AppRole —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é
- ‚úÖ **user-service** - AppRole —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é  
- ‚úÖ **api-gateway** - AppRole —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é
- ‚è≥ **–û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã** - –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ –º–µ—Ä–µ —Ä–∞–∑–≤–∏—Ç–∏—è

**–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ AppRole:**
- –õ–æ–≥–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: `docker-compose logs <service> | grep AppRole`
- –°—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω–æ–≤: `vault token lookup` —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
- Audit trail: –≤—Å—Ç—Ä–æ–µ–Ω –≤ Vault audit logs

**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:**
1. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π `VaultClient` –≤ `common/vault_client.py`
2. –î–æ–±–∞–≤–∏—Ç—å `VAULT_ROLE_ID=${VAULT_ROLE_ID}` –∏ `VAULT_SECRET_ID=${VAULT_SECRET_ID}` –≤ docker-compose.yml
3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É - —Å–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç AppRole
4. –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ AppRole –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å fallback –Ω–∞ VAULT_TOKEN

## –§—Ä–æ–Ω—Ç–µ–Ω–¥
- ‚úÖ **React + TypeScript** –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 3000
- ‚úÖ **Tailwind CSS** –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
- ‚úÖ **–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è (i18n)** –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è RU/EN —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
- ‚úÖ **–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞** —Å backend (JWT —Ç–æ–∫–µ–Ω—ã)
- ‚úÖ **–°—Ç—Ä–∞–Ω–∏—Ü—ã**: Landing, Login, Register, Dashboard, Integrations
- ‚úÖ **Responsive –¥–∏–∑–∞–π–Ω** –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (mobile-first)
- ‚úÖ **–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã**: Header —Å –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º logout, Sidebar —Å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ñ–æ—Ä–º—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
- ‚úÖ **API –∫–ª–∏–µ–Ω—Ç** –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å backend
- ‚úÖ **UX improvements**: Email –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ Sidebar, –∫–Ω–æ–ø–∫–∞ "–í—ã—Ö–æ–¥" –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–∞
- ‚úÖ **State management**: Proper logout ‚Üí login flow –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
- ‚úÖ **Debug infrastructure**: Comprehensive logging –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ UI/API –ø—Ä–æ–±–ª–µ–º
- ‚úÖ **Robust error handling**: Graceful degradation, —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ API —Ñ–æ—Ä–º–∞—Ç–∞–º–∏
- ‚úÖ **–õ–µ–Ω–¥–∏–Ω–≥ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω**: –≤—Å–µ —Å–µ–∫—Ü–∏–∏, SEO-—Ç–µ–≥–∏, –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
- ‚ùå –ù–µ –≤—Å–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ UI

### –ü–ª–∞–Ω—ã –ø–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
1. –ü–µ—Ä–≤—ã–π —Ñ—Ä–æ–Ω—Ç ‚Äî –∞–¥–º–∏–Ω–∫–∞:
   - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å–ø–∏—Å–æ–∫, —Ñ–∏–ª—å—Ç—Ä—ã, –ø–æ–∏—Å–∫)
   - –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å—Ö–æ–¥–æ–≤, –æ–ø–ª–∞—Ç, –±–∞–ª–∞–Ω—Å–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞, –ª–∏–º–∏—Ç—ã)
   - –î–∞—à–±–æ—Ä–¥—ã –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Grafana —á–µ—Ä–µ–∑ iframe –∏–ª–∏ API)
   - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Kibana –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–π UI)
   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞–º–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º–∏
   - –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –ø–æ https, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ (JWT/OAuth2)
   - –í—Å–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Vault
   - –õ–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–æ–≤ (audit trail)
2. –í—Ç–æ—Ä–æ–π —Ñ—Ä–æ–Ω—Ç ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–∫–∫–∞—É–Ω—Ç:
   - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (email, —Ç–µ–ª–µ—Ñ–æ–Ω, —Å–æ—Ü—Å–µ—Ç–∏)
   - –í—Ö–æ–¥/–≤—ã—Ö–æ–¥, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
   - –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç: –ø—Ä–æ—Ñ–∏–ª—å, —Ç–∞—Ä–∏—Ñ, –∏—Å—Ç–æ—Ä–∏—è –æ–ø–ª–∞—Ç, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
   - –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–æ–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏, –ª–∏–º–∏—Ç–∞–º–∏, –±–∞–ª–∞–Ω—Å–æ–º
   - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å backend API (—á–µ—Ä–µ–∑ API Gateway)
   - HTTPS, –∑–∞—â–∏—Ç–∞ –æ—Ç CSRF, rate limiting, 2FA (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
   - **–õ–µ–Ω–¥–∏–Ω–≥ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω, –≤—Å–µ —Å–µ–∫—Ü–∏–∏ (–æ–ø–∏—Å–∞–Ω–∏–µ, –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞, —Ç–∞—Ä–∏—Ñ—ã, FAQ, —Ñ–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏) –∏ SEO-—Ç–µ–≥–∏ —Ä–∞–±–æ—Ç–∞—é—Ç, —Ñ—Ä–æ–Ω—Ç –¥–µ–ø–ª–æ–∏—Ç—Å—è —á–µ—Ä–µ–∑ volume frontend-static –∏ nginx.**
   - **–õ–µ–Ω–¥–∏–Ω–≥ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–¥–∞–ø—Ç–∏–≤–µ–Ω, –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö, –Ω–µ—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞, –≤–∏–∑—É–∞–ª –∏ UX –¥–æ—Ä–∞–±–æ—Ç–∞–Ω—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –∏ –ø–ª–∞–Ω—à–µ—Ç–æ–≤.**

#### –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –§—Ä–æ–Ω—Ç–µ–Ω–¥—ã –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ docker-—Å–µ—Ä–≤–∏—Å—ã (SPA: React/Vue/Svelte)
- API Gateway ‚Äî –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤—Å–µ—Ö —Ñ—Ä–æ–Ω—Ç–æ–≤
- JWT-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (—Ä–∞–∑–Ω—ã–µ —Ä–æ–ª–∏: admin, user), —Å–µ–∫—Ä–µ—Ç—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–æ–≤ ‚Äî —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Vault
- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Grafana/Kibana —á–µ—Ä–µ–∑ iframe –∏–ª–∏ API (–¥–ª—è –∞–¥–º–∏–Ω–∫–∏)
- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: Swagger/OpenAPI, –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º
- –í—Å–µ —Å–µ–∫—Ä–µ—Ç—ã ‚Äî —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Vault, HTTPS –¥–ª—è –≤—Å–µ—Ö —Ñ—Ä–æ–Ω—Ç–æ–≤, –ª–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π

- Swagger UI –∏ ReDoc –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤–æ –≤–Ω–µ—à–Ω–µ–π —Å—Ä–µ–¥–µ (docs_url, redoc_url = None), –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏ DEBUG=true.
- OpenAPI JSON (/openapi.json) –æ—Å—Ç–∞—ë—Ç—Å—è –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π.
- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (audit trail) —Ç–µ–ø–µ—Ä—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –¥–ª—è login, logout, register, –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –í—Å–µ –ª–æ–≥–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –¥–ª—è Logstash/ELK.
- Security —Å—Ö–µ–º—ã (JWT, CSRF) –æ–ø–∏—Å–∞–Ω—ã –≤ OpenAPI/Swagger.

- –î–ª—è /auth/login –∏ /auth/register —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —Å—Ç—Ä–æ–≥–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ pydantic-—Å—Ö–µ–º–∞–º, –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è, OpenAPI –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.

- Volume frontend-static –¥–ª—è —Ñ—Ä–æ–Ω—Ç–∞ —Ç–µ–ø–µ—Ä—å –Ω–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–π, –∞ –ª–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞ (./frontend-static:/usr/share/nginx/html:ro). –í—Å—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç—Ç–æ–π –ø–∞–ø–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ nginx –∏ –Ω–∞ https://content-factory.xyz/.

- ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è auth (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –ª–æ–≥–∏–Ω) —á–µ—Ä–µ–∑ API Gateway –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã
- ‚úÖ –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–æ–≥–∏–Ω, —Ç–æ–∫–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /dashboard
- ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ª–æ–≥–∏–Ω —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ api-gateway, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è auth –∑–∞–≤–µ—Ä—à–µ–Ω–∞
- ‚è≥ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–ø—á—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ email-–≤–∞–ª–∏–¥–∞—Ü–∏—é

### –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–∞–±–∏–Ω–µ—Ç (Dashboard)
- Sidebar (–ª–µ–≤–æ–µ –º–µ–Ω—é) —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
- –ù–∞ desktop Sidebar –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç, –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ –∫–Ω–æ–ø–∫–µ-–≥–∞–º–±—É—Ä–≥–µ—Ä—É –≤ Header
- –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω overlay (–∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞) –∏ –∫—Ä–µ—Å—Ç–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
- –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é Sidebar –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
- –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è Tailwind, SVG-–∏–∫–æ–Ω–∫–∏, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤–µ—Ç–ª–æ–π/—Ç—ë–º–Ω–æ–π —Ç–µ–º—ã
- –í—Å—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–µ React –∏ Tailwind-–∫–ª–∞—Å—Å—ã, –±–µ–∑ –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ window.innerWidth –≤ JSX
- **–í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã. –ü–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —Ä–æ–ª–µ–π –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Dashboard –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π.**

---

## –¢–µ–∫—É—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã

### 1. Prometheus
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –°–±–æ—Ä –º–µ—Ç—Ä–∏–∫ —Å–æ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã, —ç–∫—Å–ø–æ—Ä—ë—Ä–æ–≤.
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** prometheus:9090 (docker-—Å–µ—Ç—å backend)
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: http://localhost:9090
- **–î–∞–Ω–Ω—ã–µ:** ./prometheus:/etc/prometheus (volume)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart prometheus`
  - –õ–æ–≥–∏: `docker-compose logs prometheus --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec prometheus sh`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - –ö–æ–Ω—Ñ–∏–≥ prometheus.yml –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –º–µ—Ç—Ä–∏–∫
  - –ú–µ—Ç—Ä–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–µ—Ç–∏

### 2. Grafana
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫, –¥–∞—à–±–æ—Ä–¥—ã, –∞–ª–µ—Ä—Ç—ã
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** grafana:3000
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: http://localhost:3000
- **–î–∞–Ω–Ω—ã–µ:** ./grafana:/var/lib/grafana (volume)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart grafana`
  - –õ–æ–≥–∏: `docker-compose logs grafana --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec grafana sh`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –ª–æ–≥–∏–Ω: admin/admin (—Å–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞)
  - –î–∞—à–±–æ—Ä–¥—ã –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ volume

### 3. Kibana
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–æ–≤ –∏–∑ Elasticsearch
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** kibana:5601
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: http://localhost:5601
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart kibana`
  - –õ–æ–≥–∏: `docker-compose logs kibana --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec kibana sh`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - –¢—Ä–µ–±—É–µ—Ç –∏–Ω–¥–µ–∫—Å logs-* –≤ Elasticsearch

### 4. Elasticsearch
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –•—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤, –ø–æ–∏—Å–∫, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** elasticsearch:9200
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: http://localhost:9200
- **–î–∞–Ω–Ω—ã–µ:** ./elasticsearch:/usr/share/elasticsearch/data (volume)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart elasticsearch`
  - –õ–æ–≥–∏: `docker-compose logs elasticsearch --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec elasticsearch sh`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - –¢—Ä–µ–±—É–µ—Ç –º–Ω–æ–≥–æ –ø–∞–º—è—Ç–∏ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 2–ì–ë+)

### 5. Logstash
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ü–∞—Ä—Å–∏–Ω–≥ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–æ–≤, –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Elasticsearch
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** logstash:5044
- **–î–∞–Ω–Ω—ã–µ:** ./logstash:/usr/share/logstash/pipeline (volume)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart logstash`
  - –õ–æ–≥–∏: `docker-compose logs logstash --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec logstash sh`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - –ö–æ–Ω—Ñ–∏–≥ logstash.conf –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –ª–æ–≥–æ–≤

### 6. Alertmanager
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ê–ª–µ—Ä—Ç—ã –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º Prometheus
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** alertmanager:9093
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: http://localhost:9093
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart alertmanager`
  - –õ–æ–≥–∏: `docker-compose logs alertmanager --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec alertmanager sh`

### 7. MySQL
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –û—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** mysql:3306
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: localhost:3307
- **–î–∞–Ω–Ω—ã–µ:** ./mysql:/var/lib/mysql (volume)
- **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**
  - root/Lfnm97HnPug8
  - telegraminvi/szkTgBhWh6XU
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart mysql`
  - –õ–æ–≥–∏: `docker-compose logs mysql --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec mysql bash`
  - MySQL shell: `docker-compose exec mysql mysql -u root -p`

### 8. Redis
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ö—ç—à, –æ—á–µ—Ä–µ–¥–∏, —Ö—Ä–∞–Ω–µ–Ω–∏–µ refresh token
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** redis:6379
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: localhost:6380
- **–î–∞–Ω–Ω—ã–µ:** ./redis:/data (volume)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart redis`
  - –õ–æ–≥–∏: `docker-compose logs redis --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec redis sh`
  - Redis CLI: `docker-compose exec redis redis-cli`

### 9. RabbitMQ
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –û—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—á –º–µ–∂–¥—É —Å–µ—Ä–≤–∏—Å–∞–º–∏
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** rabbitmq:5672
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: http://localhost:15672 (UI)
- **–î–∞–Ω–Ω—ã–µ:** ./rabbitmq:/var/lib/rabbitmq (volume)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart rabbitmq`
  - –õ–æ–≥–∏: `docker-compose logs rabbitmq --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec rabbitmq bash`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - UI: http://localhost:15672 (user/password)

### 10. Vault
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤, —Ç–æ–∫–µ–Ω–æ–≤, –∫–ª—é—á–µ–π
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** vault:8201
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: http://localhost:8201
- **–î–∞–Ω–Ω—ã–µ:** vault_data:/vault/data (–ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–π volume)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart vault`
  - –õ–æ–≥–∏: `docker-compose logs vault --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec vault sh`
  - ~~–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞: `docker-compose exec vault vault operator unseal`~~ **–ë–û–õ–¨–®–ï –ù–ï –¢–†–ï–ë–£–ï–¢–°–Ø**
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - **‚úÖ Production —Ä–µ–∂–∏–º —Å —Ñ–∞–π–ª–æ–≤—ã–º —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º (storage "file")**
  - **‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞**
  - **‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ unseal keys –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã**
  - **‚úÖ Root token –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è**
  - **‚úÖ KV v2 secrets engine –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π**
  - **‚úÖ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô UNSEALING —á–µ—Ä–µ–∑ Vault Unsealer Service**
  - **‚úÖ Self-healing: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç sealed state**
  - **‚úÖ Enhanced health checks —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π unsealed —Å—Ç–∞—Ç—É—Å–∞**
  - –í—Å–µ —Å–µ–∫—Ä–µ—Ç—ã –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤ —Ö—Ä–∞–Ω—è—Ç—Å—è –∑–¥–µ—Å—å
  - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Integration Service –∏ API Gateway –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç

### 10a. Vault Unsealer Service (vault-unsealer)
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π unsealing HashiCorp Vault –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ 24/7
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** vault-unsealer (—Å–µ—Ä–≤–∏—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä)
- **–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:** vault (–∂–¥—ë—Ç –∑–∞–ø—É—Å–∫–∞ Vault)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart vault-unsealer`
  - –õ–æ–≥–∏: `docker-compose logs vault-unsealer --tail 100`
  - –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: `UNSEALER_TEST_MODE=true docker-compose up vault vault-unsealer`
- **–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (.env):**
  ```bash
  VAULT_UNSEAL_KEY_1=your-first-unseal-key
  VAULT_UNSEAL_KEY_2=your-second-unseal-key  
  VAULT_UNSEAL_KEY_3=your-third-unseal-key
  UNSEALER_MAX_RETRIES=100
  UNSEALER_RETRY_DELAY=3
  UNSEALER_MONITOR_INTERVAL=30
  UNSEALER_LOG_LEVEL=DEBUG
  ```
- **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
  - **üîÑ Automatic Unsealing:** Vault –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ
  - **üîç Continuous Monitoring:** –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
  - **ü©π Self-Healing:** –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π re-unseal –µ—Å–ª–∏ Vault –∑–∞–ø–µ—á–∞—Ç–∞–µ—Ç—Å—è
  - **üìã Structured Logging:** –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ —Å timestamp –∏ —Ü–≤–µ—Ç–Ω–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π
  - **üîê Security Compliant:** Unseal keys —Ç–æ–ª—å–∫–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–Ω–µ –≤ –ª–æ–≥–∞—Ö)
  - **‚ö° Production Ready:** Retry logic, error handling, graceful shutdown
  - **üß™ Test Mode:** –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º
- **–õ–æ–≥–∏ —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã:**
  ```
  [2025-06-09] INFO:  üöÄ Vault Unsealer Service starting up
  [2025-06-09] INFO:  Found 3 unseal keys
  [2025-06-09] INFO:  Vault is reachable (attempt 1/100)
  [2025-06-09] INFO:  Current unseal progress: 0/3
  [2025-06-09] INFO:  Unseal progress: 1/3
  [2025-06-09] INFO:  Unseal progress: 2/3
  [2025-06-09] INFO:  Unseal progress: 0/3  ‚Üê sealed:false
  [2025-06-09] INFO:  ‚úÖ Vault successfully unsealed!
  [2025-06-09] INFO:  Starting continuous Vault monitoring (interval: 30s)
  [2025-06-09] DEBUG: üîì Vault status: unsealed
  ```
- **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:**
  - **Alpine Linux** –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å minimal dependencies (bash, curl, jq)
  - **Non-root user** –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  - **Health checks** –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Docker Compose
  - **Environment validation** –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –º–∏–Ω–∏–º—É–º 3 –∫–ª—é—á–µ–π
  - **Progressive unsealing** —Å real-time –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  - **Graceful shutdown** —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π SIGTERM/SIGINT
- **Production Impact:**
  - **‚úÖ Zero Manual Intervention:** –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤
  - **‚úÖ –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:** Vault –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Å—Ç–∞–µ—Ç—Å—è sealed
  - **‚úÖ Monitoring Integration:** Structured logs –¥–ª—è ELK/Prometheus
  - **‚úÖ Security Compliance:** No key exposure, minimal permissions

### 11. API Gateway (api-gateway)
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤—Å–µ—Ö —Ñ—Ä–æ–Ω—Ç–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤, –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, –ª–∏–º–∏—Ç—ã, CSRF, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** api-gateway:8000
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** http://92.113.146.148:8000 (–∏–ª–∏ —á–µ—Ä–µ–∑ nginx)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart api-gateway`
  - –õ–æ–≥–∏: `docker-compose logs api-gateway --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec api-gateway sh`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã —Å —Ñ—Ä–æ–Ω—Ç–∞ –∏–¥—É—Ç —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å
  - –õ–∏–º–∏—Ç—ã —á–µ—Ä–µ–∑ slowapi, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ stdout (JSON)
  - –°–µ–∫—Ä–µ—Ç—ã (CSRF, JWT) –±–µ—Ä—É—Ç—Å—è –∏–∑ Vault

### 12. User Service (user-service)
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –ª–æ–≥–∏–Ω, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** user-service:8001
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart user-service`
  - –õ–æ–≥–∏: `docker-compose logs user-service --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec user-service sh`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ api-gateway
  - –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ MySQL (user_service)

### 13. Integration Service (integration-service)
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º–∏ —Å –≤–Ω–µ—à–Ω–∏–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏ (Telegram API)
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** integration-service:8000
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: http://localhost:8001
- **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:** integration-postgres:5432 (PostgreSQL)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart integration-service`
  - –õ–æ–≥–∏: `docker-compose logs integration-service | tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec integration-service sh`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - –ü–æ–ª–Ω–æ—Å—Ç—å—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π FastAPI —Å PostgreSQL
  - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Vault –¥–ª—è —Å–µ–∫—Ä–µ—Ç–æ–≤
  - Health checks –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
  - Rate limiting –∏ —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  - Prometheus –º–µ—Ç—Ä–∏–∫–∏ –≤–∫–ª—é—á–µ–Ω—ã
  - **‚úÖ Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç: SMS –∏ QR –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å 2FA –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π**
  - **‚úÖ Telethon 1.34.0 —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –∫–ª–∏–µ–Ω—Ç–∞ (–Ω–µ –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –∫–æ–¥–∞)**
  - **‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è**
  - **‚úÖ Audit trail –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π**
  - **–°—Ç–∞—Ç—É—Å: ‚úÖ PRODUCTION READY - –≥–æ—Ç–æ–≤ –∫ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏**

#### **–ü–æ–¥—Ä–æ–±–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Telegram –∞–∫–∫–∞—É–Ω—Ç–æ–≤:**

**üîß SMS –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å 2FA (–ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç):**
1. **–û—Ç–ø—Ä–∞–≤–∫–∞ SMS –∫–æ–¥–∞** ‚Üí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
2. **–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞** ‚Üí SMS –∫–æ–¥ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram (`SentCodeTypeApp`)  
3. **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞** ‚Üí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥
4. **–û–±—Ä–∞–±–æ—Ç–∫–∞ 2FA** ‚Üí –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –æ–±–ª–∞—á–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
5. **–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏** ‚Üí TelegramSession —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ PostgreSQL —Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º

**üì± QR –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å 2FA (–ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç):**
1. **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞** ‚Üí `generate_qr_code()` —Å–æ–∑–¥–∞–µ—Ç TelegramClient –∏ qr_login –æ–±—ä–µ–∫—Ç
2. **–ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏** ‚Üí –ö–ª–∏–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ `_GLOBAL_QR_SESSIONS` (–ù–ï –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è!)
3. **–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ QR** ‚Üí Frontend –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç QR –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
4. **Polling –ø—Ä–æ–≤–µ—Ä–∫–∞** ‚Üí Frontend –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ `check_qr_authorization()`
5. **–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ 2FA** ‚Üí –ü—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ QR —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª—É—á–∞–µ—Ç SessionPasswordNeededError
6. **–°—Ç–∞—Ç—É—Å 2fa_required** ‚Üí Backend –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `{"status": "2fa_required"}`, –∫–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º
7. **UI –¥–ª—è 2FA** ‚Üí Frontend –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
8. **–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∞—Ä–æ–ª—è** ‚Üí Frontend –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ `checkQRAuthorization(password)`
9. **–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏** ‚Üí Backend –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è `sign_in(password=password)`
10. **–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏** ‚Üí TelegramSession —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, QR —Å–µ—Å—Å–∏—è –æ—á–∏—â–∞–µ—Ç—Å—è –∏–∑ –ø–∞–º—è—Ç–∏

**üîê –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è QR workflow:**
- **–ì–ª–æ–±–∞–ª—å–Ω–æ–µ QR —Ö—Ä–∞–Ω–∏–ª–∏—â–µ**: `_GLOBAL_QR_SESSIONS` —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—ã –º–µ–∂–¥—É HTTP –∑–∞–ø—Ä–æ—Å–∞–º–∏
- **Session lifecycle**: QR –∫–ª–∏–µ–Ω—Ç—ã –ù–ï –æ—Ç–∫–ª—é—á–∞—é—Ç—Å—è –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–ª–∏ timeout
- **Memory management**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö QR —Å–µ—Å—Å–∏–π (5 –º–∏–Ω—É—Ç timeout)
- **User isolation**: –ö–∞–∂–¥—ã–π user_id –∏–º–µ–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—É—é QR —Å–µ—Å—Å–∏—é
- **Error handling**: Graceful –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π Telegram API
- **Security compliance**: –ü–æ–ª–Ω–∞—è –∏–∑–æ–ª—è—Ü–∏—è –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

**üíæ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:**
- **Session encryption**: StringSession –¥–∞–Ω–Ω—ã–µ —à–∏—Ñ—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ Vault Transit engine
- **Database storage**: PostgreSQL —Ç–∞–±–ª–∏—Ü–∞ telegram_sessions —Å UUID –ø–µ—Ä–≤–∏—á–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏
- **User isolation**: –°—Ç—Ä–æ–≥–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ user_id –≤–æ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö
- **Audit logging**: –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π
- **Rate limiting**: –ó–∞—â–∏—Ç–∞ –æ—Ç flood-–∞—Ç–∞–∫ –Ω–∞ –≤—Å–µ—Ö endpoints –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

**üöÄ Production –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:**
- **–î–≤–∞ –º–µ—Ç–æ–¥–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è**: SMS –∏ QR —Ä–∞–±–æ—Ç–∞—é—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π
- **2FA support**: –ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±–ª–∞—á–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π Telegram –¥–ª—è –æ–±–æ–∏—Ö –º–µ—Ç–æ–¥–æ–≤
- **Enterprise architecture**: Zero technical debt, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ lifecycle –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- **Scalable design**: –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –º–∞—Å—Å–æ–≤–æ–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é –∞–∫–∫–∞—É–Ω—Ç–æ–≤
- **Monitoring ready**: Comprehensive logging –¥–ª—è debugging –∏ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

### 14. Frontend
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –í–Ω–µ—à–Ω–∏–π SPA (React)
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** frontend:3000 (dev), —Å—Ç–∞—Ç–∏–∫–∞ –¥–µ–ø–ª–æ–∏—Ç—Å—è –≤ ./frontend-static
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** https://content-factory.xyz
- **–î–∞–Ω–Ω—ã–µ:** ./frontend-static:/usr/share/nginx/html:ro (volume)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –°–±–æ—Ä–∫–∞: `cd frontend && npm run build`
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx: `docker-compose restart nginx`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - –í—Å–µ —Å—Ç–∞—Ç–∏–∫–∞ –¥–µ–ø–ª–æ–∏—Ç—Å—è —á–µ—Ä–µ–∑ volume
  - –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: `npm run dev` (–ø–æ—Ä—Ç 3000)

### 15. Nginx (reverse proxy)
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –í–Ω–µ—à–Ω–∏–π reverse proxy, SSL-—Ç–µ—Ä–º–∏–Ω–∞—Ü–∏—è, –ø—É–±–ª–∏–∫–∞—Ü–∏—è —Ñ—Ä–æ–Ω—Ç–∞ –∏ API
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** nginx:80, nginx:443
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** http://content-factory.xyz, https://content-factory.xyz
- **–î–∞–Ω–Ω—ã–µ:** ./nginx.conf, ./frontend-static
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart nginx`
  - –õ–æ–≥–∏: `docker-compose logs nginx --tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec nginx sh`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - SSL —á–µ—Ä–µ–∑ Let's Encrypt
  - –ü—Ä–æ–∫—Å–∏—Ä—É–µ—Ç –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ api-gateway –∏ frontend

### 16. PostgreSQL Integration (integration-postgres)
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Integration Service
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** integration-postgres:5432
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: localhost:5433
- **–î–∞–Ω–Ω—ã–µ:** ./integration_postgres_data:/var/lib/postgresql/data (volume)
- **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**
  - integration_user/integration_password
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart integration-postgres`
  - –õ–æ–≥–∏: `docker-compose logs integration-postgres | tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec integration-postgres bash`
  - PostgreSQL shell: `docker-compose exec integration-postgres psql -U integration_user -d integration_db`
- **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
  - PostgreSQL 15 —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π JSONB, UUID, –∏–Ω–¥–µ–∫—Å–æ–≤
  - 4 —Ç–∞–±–ª–∏—Ü—ã: telegram_sessions, telegram_bots, telegram_channels, integration_logs
  - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è updated_at
  - –ü–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫ –∏ GIN –∏–Ω–¥–µ–∫—Å—ã

### 17. Parsing Service (parsing-service) **‚úÖ 100% PRODUCTION READY**
- **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ú—É–ª—å—Ç–∏–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π (Telegram)
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å:** parsing-service:8002
- **–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å:** –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH-—Ç—É–Ω–Ω–µ–ª—å: http://localhost:8002
- **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:** parsing-postgres:5433 (PostgreSQL)
- **–ö–æ–º–∞–Ω–¥—ã:**
  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: `docker-compose restart parsing-service`
  - –õ–æ–≥–∏: `docker-compose logs parsing-service | tail 100`
  - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: `docker-compose exec parsing-service sh`
- **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:**
  - ‚úÖ **Telegram –ø–∞—Ä—Å–∏–Ω–≥**: –ö–∞–Ω–∞–ª—ã –∏ –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ real Telethon –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
  - ‚úÖ **Database integration**: PostgreSQL —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏
  - ‚úÖ **Task management**: –ü–æ–ª–Ω—ã–π CRUD —Å –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–µ–π (HIGH/NORMAL/LOW)
  - ‚úÖ **Speed configuration**: Safe/Medium/Fast —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑–ª–∏—á–∏—è–º–∏ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  - ‚úÖ **Results display**: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞
  - ‚úÖ **Account Manager**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ Telegram –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∑–∞–¥–∞—á–∞–º
  - ‚úÖ **Real-time progress**: Progress tracking —Å intelligent estimation
  - ‚úÖ **Integration**: Vault (—Å–µ–∫—Ä–µ—Ç—ã) + Integration Service (–∞–∫–∫–∞—É–Ω—Ç—ã) + API Gateway (auth)
- **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:**
  - Platform Adapters pattern –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è (Instagram, WhatsApp)
  - Enterprise-ready codebase —Å zero technical debt
  - AppRole –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å Vault
  - Comprehensive error handling –∏ logging
  - Ready –¥–ª—è horizontal scaling

---

## –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (2025-06-04)

### ‚úÖ VAULT –ü–ï–†–ï–í–ï–î–ï–ù –í PRODUCTION –†–ï–ñ–ò–ú
**–†–µ—à–µ–Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ—Ç–µ—Ä–µ–π –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ:**
- **Production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:** Vault —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ (`storage "file"`) –≤–º–µ—Å—Ç–æ dev-—Ä–µ–∂–∏–º–∞
- **–ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:** Volume `vault_data:/vault/data` –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤
- **–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:** –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å unseal –∫–ª—é—á–∞–º–∏
- **–ó–∞—â–∏—Ç–∞ —Ç–æ–∫–µ–Ω–æ–≤:** Root token –≤—ã–Ω–µ—Å–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (`VAULT_ROOT_TOKEN`)
- **–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:** –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ `vault:vault` –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Ñ–∞–π–ª–æ–≤–æ–≥–æ backend
- **GitHub Protection:** –¢–æ–∫–µ–Ω—ã –±–æ–ª—å—à–µ –Ω–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –±–ª–∞–≥–æ–¥–∞—Ä—è push protection

### ‚úÖ TELEGRAM –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–ê–ï–¢
**–†–µ—à–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π –∫–æ–¥–æ–≤:**
- **SMS –∫–æ–¥—ã –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è:** –ö–æ–¥—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram (`Code type: SentCodeTypeApp`)
- **–ê–∫–∫–∞—É–Ω—Ç—ã –ø–æ–¥–∫–ª—é—á–∞—é—Ç—Å—è:** –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞—é—Ç—Å—è `TelegramSession` –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
- **–ö–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º:** –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ - –∫–ª–∏–µ–Ω—Ç –Ω–µ –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –∫–æ–¥–∞
- **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:** –ü—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è
- **Telethon 1.34.0:** –û–±–Ω–æ–≤–ª–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, —É–±—Ä–∞–Ω—ã deprecated –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (`force_sms`, `allow_flashcall`)
- **Vault –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:** Telegram API –∫–ª—é—á–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ Vault –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è

### ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ –ò –û–ü–ï–†–ê–¶–ò–û–ù–ù–ê–Ø –ì–û–¢–û–í–ù–û–°–¢–¨
**–î–æ—Å—Ç–∏–≥–Ω—É—Ç production —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:**
- **Encrypted Sessions:** –°–µ—Å—Å–∏–∏ Telegram —à–∏—Ñ—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ Vault Transit engine
- **Audit Trail:** –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Å –ø–æ–ª–Ω–æ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π
- **Rate Limiting:** –ó–∞—â–∏—Ç–∞ –æ—Ç flood-–∞—Ç–∞–∫ –∏ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π –Ω–∞ –≤—Å–µ—Ö endpoints
- **Secret Management:** –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞–º–∏ —á–µ—Ä–µ–∑ production Vault
- **Access Control:** API –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π docker —Å–µ—Ç–∏
- **Health Monitoring:** –ü–æ–ª–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è Vault –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ–∫—Ä–µ—Ç–æ–≤

### ‚úÖ –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –£–õ–£–ß–®–ï–ù–ò–Ø
**–û–±–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã:**
- **Requirements.txt:** –û–±–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –≤–µ—Ä—Å–∏–π
- **Database Config:** –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ë–î (—Ç–æ–ª—å–∫–æ PostgreSQL –¥–ª—è Integration Service)
- **Environment Variables:** –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
- **Docker Compose:** –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è production —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏

### üéØ PRODUCTION READY STATUS
**Integration Service –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏:**

#### ‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç:
- Vault –≤ production —Ä–µ–∂–∏–º–µ —Å persistence
- PostgreSQL —Å –ø–æ–ª–Ω–æ–π —Å—Ö–µ–º–æ–π –ë–î
- Telegram API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è (–∫–æ–¥—ã + –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤)
- –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–π —á–µ—Ä–µ–∑ Vault
- Rate limiting –∏ security

#### ‚úÖ –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:
- –í—Å–µ API endpoints —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç
- Health checks –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∑–¥–æ—Ä–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
- Prometheus –º–µ—Ç—Ä–∏–∫–∏ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è
- –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—é

#### ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å production —É—Ä–æ–≤–Ω—è:
- –°–µ–∫—Ä–µ—Ç—ã –Ω–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
- –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Vault
- Audit trail –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
- Access control –∏ network isolation

### üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò
**–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑–≤–∏—Ç–∏—é:**
1. **–ú–∞—Å—Å–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤** - –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞
2. **–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π** —á–µ—Ä–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã  
3. **–§—Ä–æ–Ω—Ç–µ–Ω–¥ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å** –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º–∏
4. **Backup —Å—Ç—Ä–∞—Ç–µ–≥–∏—è** –¥–ª—è Vault –¥–∞–Ω–Ω—ã—Ö
5. **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π unseal** –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å–µ—Ä–≤–µ—Ä–∞

### üìä –õ–û–ì–ò –£–°–ü–ï–®–ù–û–ô –†–ê–ë–û–¢–´
```
2025-06-04 21:04:16 - Code sent successfully!
2025-06-04 21:04:16 - Code type: SentCodeTypeApp(length=5)
2025-06-04 21:04:28 - Using active client from memory for sign_in
2025-06-04 21:04:28 - Created TelegramSession with id: 86656856-960d-42ae-9449-868104aed430
```

**üü¢ –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°: INTEGRATION SERVICE PRODUCTION READY**

---

## üîê –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò

### –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

–ü—Ä–æ–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å JWT —Ç–æ–∫–µ–Ω–∞–º–∏ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π —Å HashiCorp Vault –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤.

#### **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:**

1. **User Service** - —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, –≤—ã–¥–∞—á–∞ JWT —Ç–æ–∫–µ–Ω–æ–≤
2. **API Gateway** - –µ–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞, –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–æ–≤, –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤  
3. **HashiCorp Vault** - —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ JWT —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏ —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
4. **–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã** - –≤–∞–ª–∏–¥–∞—Ü–∏—è JWT —Ç–æ–∫–µ–Ω–æ–≤, –∏–∑–æ–ª—è—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

#### **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:**

- **Single Sign-On**: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–æ–≥–∏–Ω–∏—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑, —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤–æ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
- **Stateless JWT**: –¢–æ–∫–µ–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
- **Centralized secrets**: –í—Å–µ —Å–µ–∫—Ä–µ—Ç—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ Vault, –Ω–µ –≤ .env —Ñ–∞–π–ª–∞—Ö
- **Service isolation**: –ö–∞–∂–¥—ã–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–∫–µ–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ
- **User isolation**: –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ JWT —Ç–æ–∫–µ–Ω–æ–≤

**Payload format:**
```json
{
  "sub": "nikita.f3d@gmail.com",  // Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  "exp": 1749641708               // –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è
}
```

**–ê–ª–≥–æ—Ä–∏—Ç–º –ø–æ–¥–ø–∏—Å–∏:** HS256  
**–°–µ–∫—Ä–µ—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏:** –•—Ä–∞–Ω–∏—Ç—Å—è –≤ Vault –ø–æ –ø—É—Ç–∏ `kv/data/jwt.secret_key`  
**TTL —Ç–æ–∫–µ–Ω–∞:** 1 —á–∞—Å (–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –≤ –∫–∞–∂–¥–æ–º —Å–µ—Ä–≤–∏—Å–µ)

### –ü—Ä–æ—Ü–µ—Å—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

#### **1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:**

```mermaid
sequenceDiagram
    participant F as Frontend
    participant AG as API Gateway
    participant US as User Service
    participant DB as MySQL
    
    F->>AG: POST /api/auth/register
    AG->>US: POST /register
    US->>DB: INSERT user
    DB-->>US: user created
    US-->>AG: success
    AG-->>F: success
    
    Note over F: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ª–æ–≥–∏–Ω –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    F->>AG: POST /api/auth/login
    AG->>US: POST /token
    US->>DB: SELECT user by email
    US-->>AG: JWT token
    AG-->>F: JWT token
```

#### **2. –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:**

```mermaid
sequenceDiagram
    participant F as Frontend
    participant AG as API Gateway  
    participant US as User Service
    participant V as Vault
    participant DB as MySQL
    
    F->>AG: POST /api/auth/login
    AG->>US: POST /token
    US->>V: GET kv/data/jwt
    V-->>US: JWT secret
    US->>DB: SELECT user by email
    DB-->>US: user data
    US->>US: verify password
    US->>US: create JWT token
    US-->>AG: {access_token, token_type}
    AG-->>F: JWT token
```

#### **3. Logout –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:**

```mermaid
sequenceDiagram
    participant F as Frontend
    participant AG as API Gateway
    participant US as User Service
    participant R as Redis
    participant UC as UserContext
    
    F->>AG: POST /api/auth/logout
    Note over F,AG: Authorization: Bearer JWT_TOKEN
    AG->>US: POST /auth/logout
    Note over AG,US: Authorization: Bearer JWT_TOKEN
    US->>R: DELETE refresh_token:user_id
    US->>R: SET jwt_blacklist:token_hash ttl=3600
    US-->>AG: {message: "Successfully logged out"}
    AG-->>US: DELETE refresh_token cookie
    AG-->>F: logout success
    F->>UC: setError('–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞')
    F->>UC: clearError() // –ø—Ä–∏ –Ω–æ–≤–æ–º –≤—Ö–æ–¥–µ
    F->>F: localStorage.removeItem('access_token')
    F->>F: navigate('/login')
```

**–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ logout:**
- **Backend**: Refresh —Ç–æ–∫–µ–Ω—ã —É–¥–∞–ª—è—é—Ç—Å—è –∏–∑ Redis, JWT –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ blacklist
- **Cookies**: refresh_token cookie —É–¥–∞–ª—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ API Gateway
- **Frontend**: localStorage –æ—á–∏—â–∞–µ—Ç—Å—è, —Å–æ—Å—Ç–æ—è–Ω–∏–µ UserContext —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è
- **Security**: –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–Ω–≤–∞–ª–∏–¥–∏—Ä—É—é—Ç—Å—è
- **UX**: Smooth transition –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π 2025-06-11

#### **4. –î–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º —Ä–µ—Å—É—Ä—Å–∞–º:**

```mermaid
sequenceDiagram
    participant F as Frontend
    participant AG as API Gateway
    participant IS as Integration Service
    participant V as Vault
    participant DB as PostgreSQL
    
    F->>AG: GET /api/integrations/telegram/accounts
    Note over F,AG: Authorization: Bearer JWT_TOKEN
    AG->>IS: GET /api/v1/telegram/accounts
    Note over AG,IS: Authorization: Bearer JWT_TOKEN
    IS->>V: GET kv/data/jwt
    V-->>IS: JWT secret
    IS->>IS: decode & validate JWT
    IS->>IS: extract user_id from email
    IS->>DB: SELECT sessions WHERE user_id=1
    DB-->>IS: user sessions
    IS-->>AG: user sessions
    AG-->>F: user sessions
```

### Vault - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞–º–∏

#### **–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vault:**

- **–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:** Production —Å —Ñ–∞–π–ª–æ–≤—ã–º —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
- **KV Engine:** v2 (kv/data/path/to/secret)
- **Unseal keys:** 5 –∫–ª—é—á–µ–π (–º–∏–Ω–∏–º—É–º 3 –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏)
- **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π unsealing:** Vault Unsealer Service

### Logout –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏

#### **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ logout —Å–∏—Å—Ç–µ–º—ã:**

**–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:**
- **User Service** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ refresh —Ç–æ–∫–µ–Ω–∞–º–∏ –∏ JWT blacklist
- **API Gateway** - –æ–±—Ä–∞–±–æ—Ç–∫–∞ logout, —É–¥–∞–ª–µ–Ω–∏–µ cookies  
- **Redis** - —Ö—Ä–∞–Ω–µ–Ω–∏–µ refresh —Ç–æ–∫–µ–Ω–æ–≤ –∏ JWT blacklist
- **Frontend** - –æ—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ smooth UX –ø–µ—Ä–µ—Ö–æ–¥—ã

#### **Multi-layer logout security:**

**1. Backend —Ç–æ–∫–µ–Ω –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è:**
```python
# User Service logout process:
async def logout(user_id: int, jwt_token: str):
    # 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ refresh —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await redis_client.delete(f"refresh_token:{user_id}")
    
    # 2. –î–æ–±–∞–≤–ª—è–µ–º JWT –≤ blacklist –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è
    token_hash = hashlib.sha256(jwt_token.encode()).hexdigest()
    ttl = get_jwt_remaining_time(jwt_token)  # –î–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    await redis_client.setex(f"jwt_blacklist:{token_hash}", ttl, "1")
    
    # 3. –õ–æ–≥–∏—Ä—É–µ–º logout –¥–ª—è audit trail
    logger.info(f"üö™ User {user_id} logged out, tokens invalidated")
```

**2. Cookie management (API Gateway):**
```python
# API Gateway logout handling:
async def logout_handler(request: Request, response: Response):
    # 1. –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º logout –∫ User Service
    logout_response = await user_service.logout(request)
    
    # 2. –£–¥–∞–ª—è–µ–º refresh_token cookie
    response.delete_cookie(
        key="refresh_token",
        httponly=True,
        secure=True,
        samesite="strict"
    )
    
    return logout_response
```

**3. JWT Blacklist –ø—Ä–æ–≤–µ—Ä–∫–∞:**
```python
# Middleware –ø—Ä–æ–≤–µ—Ä–∫–∏ blacklist –≤–æ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö:
async def check_jwt_blacklist(jwt_token: str) -> bool:
    token_hash = hashlib.sha256(jwt_token.encode()).hexdigest()
    is_blacklisted = await redis_client.exists(f"jwt_blacklist:{token_hash}")
    
    if is_blacklisted:
        logger.warning(f"üö´ Blocked blacklisted JWT token")
        raise AuthenticationError("Token has been invalidated")
    
    return True
```

**4. Frontend state management:**
```typescript
// UserContext.tsx - –ø–æ–ª–Ω—ã–π logout –ø—Ä–æ—Ü–µ—Å—Å
const logout = useCallback(async () => {
  try {
    // 1. –í—ã–∑—ã–≤–∞–µ–º backend logout API
    await apiFetch('/api/auth/logout', { method: 'POST' });
    
    // 2. –û—á–∏—â–∞–µ–º –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    localStorage.removeItem('access_token');
    localStorage.removeItem('refresh_token');
    setUser(null);
    setError('–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞');
    
    // 3. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ login
    navigate('/login');
  } catch (error) {
    // Logout –≤—Å–µ–≥–¥–∞ —É—Å–ø–µ—à–µ–Ω –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ, –¥–∞–∂–µ –µ—Å–ª–∏ backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    console.warn('Logout API failed, clearing local state anyway');
  }
}, [navigate]);

// –ú–µ—Ç–æ–¥ –æ—á–∏—Å—Ç–∫–∏ error —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è smooth UX
const clearError = useCallback(() => {
  setError('');
}, []);
```

#### **UX —É–ª—É—á—à–µ–Ω–∏—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è 2025-06-11):**

**–ü—Ä–æ–±–ª–µ–º–∞**: –ü–æ—Å–ª–µ logout –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–≥ —Å—Ä–∞–∑—É –≤–æ–π—Ç–∏ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

**–†–µ—à–µ–Ω–∏–µ 1 - Error state management:**
```typescript
// Login.tsx - –æ—á–∏—Å—Ç–∫–∞ error —Å–æ—Å—Ç–æ—è–Ω–∏–π
useEffect(() => {
  if (location.state && location.state.error) {
    setError(location.state.error);
  }
  // –û—á–∏—â–∞–µ–º error –∏–∑ UserContext –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ Login —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  clearError();
}, [location.state, clearError]);

const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
  // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
  if (error) setError('');
  setForm({ ...form, [e.target.name]: e.target.value });
};
```

**–†–µ—à–µ–Ω–∏–µ 2 - UserContext sync:**
```typescript
// Login.tsx - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UserContext
const handleSubmit = async (e: React.FormEvent) => {
  // ... validation and API call ...
  
  if (response.ok) {
    localStorage.setItem('access_token', data.access_token);
    localStorage.setItem('refresh_token', data.refresh_token);
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º UserContext –ø–µ—Ä–µ–¥ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    await refreshProfile();
    navigate('/dashboard');
  }
};

// UserContext.tsx - async fetchProfile
const fetchProfile = useCallback(async () => {
  setLoading(true);
  setError('');
  try {
    const res = await apiFetch('/api/auth/me');
    if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è');
    const data = await res.json();
    setUser(data);
  } catch (e) {
    setUser(null);
    setError('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
  } finally {
    setLoading(false);
  }
}, []);
```

#### **Rate Limiting –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:**

**–ü—Ä–æ–±–ª–µ–º–∞**: –°–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∏–π rate limiting –±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

**–†–µ—à–µ–Ω–∏–µ - –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã:**
```python
# backend/api-gateway/main.py
@api_router.post("/auth/login")
@limiter.limit("20/minute")    # –ë—ã–ª–æ: 5/minute

@api_router.post("/auth/logout")
@limiter.limit("30/minute")    # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è normal usage

@api_router.post("/auth/register") 
@limiter.limit("10/minute")    # –ë—ã–ª–æ: 5/minute

@api_router.post("/auth/refresh")
@limiter.limit("30/minute")    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
```

#### **Production security features:**

**1. Refresh Token Rotation:**
- Refresh —Ç–æ–∫–µ–Ω—ã –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π TTL (30 –¥–Ω–µ–π)
- –ü—Ä–∏ –∫–∞–∂–¥–æ–º refresh —Å—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω –∏–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç—Å—è
- –•—Ä–∞–Ω—è—Ç—Å—è –≤ HttpOnly cookies –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç XSS

**2. JWT Blacklist:**
- –í—Å–µ logout JWT —Ç–æ–∫–µ–Ω—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ blacklist
- TTL —Ä–∞–≤–µ–Ω –æ—Å—Ç–∞–≤—à–µ–º—É—Å—è –≤—Ä–µ–º–µ–Ω–∏ –∂–∏–∑–Ω–∏ —Ç–æ–∫–µ–Ω–∞
- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤–æ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö –ø—Ä–∏ –∫–∞–∂–¥–æ–º request

**3. Audit Trail:**
```json
// –ü—Ä–∏–º–µ—Ä audit logs
{"event": "logout_success", "user_id": 1, "ip": "192.168.1.100", "timestamp": "2025-06-11T10:30:00Z"}
{"event": "token_blacklisted", "token_hash": "sha256...", "ttl": 3600}
{"event": "refresh_token_deleted", "user_id": 1}
```

#### **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–ª–µ—Ä—Ç—ã:**

**–ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:**
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ logout –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –º–∏–Ω—É—Ç—É
- –†–∞–∑–º–µ—Ä JWT blacklist –≤ Redis
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö refresh —Ç–æ–∫–µ–Ω–æ–≤
- Rate limiting –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ endpoint

**–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–ª–µ—Ä—Ç—ã:**
- –ú–∞—Å—Å–æ–≤—ã–µ logout (–≤–æ–∑–º–æ–∂–Ω–∞—è –∞—Ç–∞–∫–∞)
- –ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ Redis JWT blacklist
- –í—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç rate limiting –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫

#### **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ Vault:**

```
kv/
‚îú‚îÄ‚îÄ data/
‚îÇ   ‚îú‚îÄ‚îÄ jwt/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ secret_key: "your-jwt-secret-256-bit"
‚îÇ   ‚îú‚îÄ‚îÄ mysql/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ root_password: "Lfnm97HnPug8"
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ user: "telegraminvi"
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ user_password: "szkTgBhWh6XU"
‚îÇ   ‚îî‚îÄ‚îÄ integrations/
‚îÇ       ‚îî‚îÄ‚îÄ telegram/
‚îÇ           ‚îú‚îÄ‚îÄ api_id: "your-telegram-api-id"
‚îÇ           ‚îî‚îÄ‚îÄ api_hash: "your-telegram-api-hash"
```

#### **Vault Unsealer Service:**

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Vault –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ:
- **Continuous monitoring:** –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
- **Self-healing:** –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ
- **Security compliance:** Unseal keys —Ç–æ–ª—å–∫–æ –≤ environment variables
- **Zero downtime:** Vault –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤

#### **–ü–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞:**

```hcl
# integration-service-policy.hcl
path "kv/data/integration-service" {
  capabilities = ["read"]
}
path "kv/data/jwt" {
  capabilities = ["read"]
}
path "kv/metadata/integration-service" {
  capabilities = ["read"]
}
path "kv/metadata/jwt" {
  capabilities = ["read"]
}
```

### –ò–∑–æ–ª—è—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

#### **–ü—Ä–∏–Ω—Ü–∏–ø—ã –∏–∑–æ–ª—è—Ü–∏–∏:**

1. **JWT —Å–æ–¥–µ—Ä–∂–∏—Ç email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** (–ø–æ–ª–µ `sub`)
2. **–ö–∞–∂–¥—ã–π —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç email –≤ user_id** —á–µ—Ä–µ–∑ API Gateway
3. **–í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –ë–î —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –ø–æ user_id**
4. **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ**

#### **–ü—Ä–∏–º–µ—Ä –∏–∑–æ–ª—è—Ü–∏–∏ –≤ Integration Service:**

```python
async def get_telegram_accounts(
    request: Request,
    active_only: bool = True
) -> List[TelegramAccountResponse]:
    # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ JWT —Ç–æ–∫–µ–Ω–∞
    user_id = await get_user_id_from_request(request)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–µ—Å—Å–∏–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sessions = await telegram_service.get_user_sessions(
        user_id=user_id, 
        active_only=active_only
    )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    filtered_sessions = [s for s in sessions if s.user_id == user_id]
    
    return [TelegramAccountResponse.from_session(s) for s in filtered_sessions]
```

### –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è

#### **–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞:**

1. **JWT validation module** - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
2. **Vault integration** - –ø–æ–ª—É—á–µ–Ω–∏–µ JWT —Å–µ–∫—Ä–µ—Ç–∞
3. **User ID extraction** - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ email –≤ user_id
4. **Data isolation** - —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ user_id

---

## üìò –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –°–û–ó–î–ê–ù–ò–Æ –ù–û–í–´–• –ú–ò–ö–†–û–°–ï–†–í–ò–°–û–í –° –ê–í–¢–û–†–ò–ó–ê–¶–ò–ï–ô

### –®–∞–≥ 1: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
backend/your-service/
‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îú‚îÄ‚îÄ core/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ config.py      # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ auth.py        # –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ vault.py       # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Vault
‚îÇ   ‚îú‚îÄ‚îÄ api/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ v1/
‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ endpoints/ # API endpoints
‚îÇ   ‚îú‚îÄ‚îÄ models/            # SQLAlchemy –º–æ–¥–µ–ª–∏
‚îÇ   ‚îú‚îÄ‚îÄ schemas/           # Pydantic —Å—Ö–µ–º—ã
‚îÇ   ‚îú‚îÄ‚îÄ services/          # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
‚îÇ   ‚îî‚îÄ‚îÄ main.py           # FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
‚îú‚îÄ‚îÄ requirements.txt
‚îî‚îÄ‚îÄ Dockerfile
```

### –®–∞–≥ 2: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å Vault (config.py)

```python
from pydantic_settings import BaseSettings
from typing import Optional
from functools import lru_cache
from common.vault_client import VaultClient
import os

class Settings(BaseSettings):
    APP_NAME: str = "Your Service"
    DEBUG: bool = False
    
    # Vault –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    VAULT_ADDR: str = "http://vault:8201"
    VAULT_TOKEN: str = "root"
    
    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    DATABASE_URL: str = "..."
    
    # JWT –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ Vault)
    JWT_SECRET_KEY: Optional[str] = None
    JWT_ALGORITHM: str = "HS256"
    
    def __init__(self, **values):
        super().__init__(**values)
        # –ü–æ–ª—É—á–∞–µ–º JWT —Å–µ–∫—Ä–µ—Ç –∏–∑ Vault
        vault_client = VaultClient()
        try:
            secret_data = vault_client.get_secret("kv/data/jwt")
            self.JWT_SECRET_KEY = secret_data['secret_key']
            print(f"‚úÖ {self.APP_NAME}: JWT —Å–µ–∫—Ä–µ—Ç –ø–æ–ª—É—á–µ–Ω –∏–∑ Vault")
        except Exception as e:
            self.JWT_SECRET_KEY = os.getenv('JWT_SECRET_KEY', 'fallback-secret')
            print(f"‚ö†Ô∏è {self.APP_NAME}: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è JWT –∏–∑ ENV: {e}")
    
    class Config:
        env_file = ".env"

@lru_cache()
def get_settings() -> Settings:
    return Settings()
```

### –®–∞–≥ 3: –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (auth.py)

```python
from fastapi import HTTPException, Depends, status, Request
from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials
import jwt
from typing import Optional
import logging
from .config import get_settings
import httpx
import os

logger = logging.getLogger(__name__)
security = HTTPBearer(auto_error=False)

API_GATEWAY_URL = os.getenv("API_GATEWAY_URL", "http://api-gateway:8000")

class AuthenticationError(HTTPException):
    def __init__(self, detail: str = "Authentication failed"):
        super().__init__(
            status_code=status.HTTP_401_UNAUTHORIZED,
            detail=detail,
            headers={"WWW-Authenticate": "Bearer"},
        )

async def get_user_id_by_email_via_api_gateway(email: str) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å user_id –ø–æ email —á–µ—Ä–µ–∑ API Gateway"""
    logger.info(f"üîç {__name__}: –∑–∞–ø—Ä–æ—Å user_id –¥–ª—è email: '{email}'")
    url = f"{API_GATEWAY_URL}/internal/users/by-email?email={email}"
    async with httpx.AsyncClient() as client:
        resp = await client.get(url, timeout=5)
        if resp.status_code == 200:
            data = resp.json()
            return data["id"]
        elif resp.status_code == 404:
            return None
        else:
            logger.error(f"API Gateway error: {resp.status_code} {resp.text}")
            raise AuthenticationError("User service unavailable")

async def get_user_id_from_request(request: Request) -> int:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤.
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç user_id –∏–∑ JWT —Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization.
    """
    auth_header = request.headers.get("authorization") or request.headers.get("Authorization")
    if not auth_header:
        logger.error("üö´ Missing Authorization header")
        raise AuthenticationError("Authorization header missing")
    
    if not auth_header.startswith("Bearer "):
        logger.error("üö´ Invalid Authorization header format")
        raise AuthenticationError("Invalid Authorization header format")
    
    token = auth_header[7:]
    logger.info(f"üîç Processing JWT token: {token[:30]}...")
    
    settings = get_settings()
    try:
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º JWT —Ç–æ–∫–µ–Ω
        payload = jwt.decode(token, settings.JWT_SECRET_KEY, algorithms=["HS256"])
        email = payload.get("sub")
        if not email:
            logger.error(f"üö´ JWT token missing 'sub' field: {payload}")
            raise AuthenticationError("Invalid token: missing email")
        
        logger.info(f"üîç JWT PAYLOAD: {payload}")
        logger.info(f"üîç USER EMAIL: '{email}'")
        
        # –ü–æ–ª—É—á–∞–µ–º user_id –ø–æ email
        if "@" in email:
            user_id = await get_user_id_by_email_via_api_gateway(email)
            if not user_id:
                logger.error(f"üö´ User not found for email: {email}")
                raise AuthenticationError("Invalid token: user not found")
            
            logger.info(f"‚úÖ JWT Authentication successful - User ID: {user_id}")
            return user_id
        else:
            # –ï—Å–ª–∏ –≤ —Ç–æ–∫–µ–Ω–µ —É–∂–µ user_id
            user_id = int(email)
            logger.info(f"‚úÖ JWT Authentication successful - User ID: {user_id}")
            return user_id
            
    except jwt.ExpiredSignatureError:
        logger.error("üö´ JWT token expired")
        raise AuthenticationError("Token expired")
    except jwt.InvalidTokenError as e:
        logger.error(f"üö´ Invalid JWT token: {e}")
        raise AuthenticationError("Invalid token")
    except Exception as e:
        logger.error(f"üö´ Authentication error: {e}")
        raise AuthenticationError("Authentication failed")

async def get_current_user_id(
    credentials: HTTPAuthorizationCredentials = Depends(security)
) -> int:
    """
    FastAPI Dependency –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è user_id.
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ endpoints –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä.
    """
    if not credentials:
        raise AuthenticationError("Authorization header missing")
    
    # –°–æ–∑–¥–∞–µ–º mock Request –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    class MockRequest:
        def __init__(self, token):
            self.headers = {"authorization": f"Bearer {token}"}
    
    mock_request = MockRequest(credentials.credentials)
    return await get_user_id_from_request(mock_request)

async def get_optional_user_id(
    credentials: Optional[HTTPAuthorizationCredentials] = Depends(security)
) -> Optional[int]:
    """
    –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç user_id –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π, –∏–Ω–∞—á–µ None.
    """
    if not credentials:
        return None
    
    try:
        return await get_current_user_id(credentials)
    except AuthenticationError:
        return None
```

### –®–∞–≥ 4: API Endpoints —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π

```python
from fastapi import APIRouter, Request, Depends
from typing import List
from ..core.auth import get_user_id_from_request, get_current_user_id
from ..services.your_service import YourService
from ..schemas.your_schemas import YourResponse

router = APIRouter()

@router.get("/your-data", response_model=List[YourResponse])
async def get_user_data(
    request: Request,
    your_service: YourService = Depends()
) -> List[YourResponse]:
    """
    –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ JWT —Ç–æ–∫–µ–Ω–∞
    user_id = await get_user_id_from_request(request)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = await your_service.get_user_data(user_id=user_id)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–ª—è—Ü–∏–∏
    filtered_data = [d for d in user_data if d.user_id == user_id]
    
    return filtered_data

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ Dependency
@router.get("/your-data-alt", response_model=List[YourResponse])
async def get_user_data_alt(
    user_id: int = Depends(get_current_user_id),
    your_service: YourService = Depends()
) -> List[YourResponse]:
    """
    –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è user_id —á–µ—Ä–µ–∑ FastAPI Dependency.
    """
    user_data = await your_service.get_user_data(user_id=user_id)
    return user_data
```

### –®–∞–≥ 5: –°–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π —Å –∏–∑–æ–ª—è—Ü–∏–µ–π

```python
from typing import List, Optional
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from ..models.your_model import YourModel

class YourService:
    def __init__(self, db: AsyncSession):
        self.db = db
    
    async def get_user_data(self, user_id: int) -> List[YourModel]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–∑–æ–ª—è—Ü–∏–µ–π.
        –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –≤—Å–µ–≥–¥–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ user_id!
        """
        query = select(YourModel).where(YourModel.user_id == user_id)
        result = await self.db.execute(query)
        data = result.scalars().all()
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        logger.info(f"üîí Returning {len(data)} items for user {user_id}")
        
        return data
    
    async def create_user_data(self, user_id: int, data: dict) -> YourModel:
        """
        –°–æ–∑–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –≤—Å–µ–≥–¥–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å user_id!
        """
        new_item = YourModel(
            user_id=user_id,  # ‚ö†Ô∏è –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!
            **data
        )
        self.db.add(new_item)
        await self.db.commit()
        await self.db.refresh(new_item)
        
        logger.info(f"üîí Created item {new_item.id} for user {user_id}")
        return new_item
```

### –®–∞–≥ 6: Docker Compose –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è

```yaml
your-service:
  build: ./backend/your-service
  container_name: your-service
  environment:
    - VAULT_ADDR=http://vault:8201
    - VAULT_TOKEN=${VAULT_TOKEN}
    - API_GATEWAY_URL=http://api-gateway:8000
    - DATABASE_URL=postgresql://user:pass@postgres:5432/your_db
  depends_on:
    vault:
      condition: service_healthy
    postgres:
      condition: service_healthy
  networks:
    - backend
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    interval: 30s
    timeout: 10s
    retries: 3
```

### –®–∞–≥ 7: API Gateway –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è

–î–æ–±–∞–≤–∏—Ç—å –≤ `backend/api-gateway/main.py`:

```python
@api_router.get("/your-service/{path:path}")
@api_router.post("/your-service/{path:path}")
@api_router.put("/your-service/{path:path}")
@api_router.delete("/your-service/{path:path}")
async def proxy_to_your_service(path: str, request: Request):
    """–ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Your Service"""
    return await proxy_to_service("your-service", path, request)
```

### –®–∞–≥ 8: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

```python
import pytest
from fastapi.testclient import TestClient
from unittest.mock import patch

def test_protected_endpoint_requires_auth():
    """–¢–µ—Å—Ç: –∑–∞—â–∏—â–µ–Ω–Ω—ã–π endpoint —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é"""
    response = client.get("/your-data")
    assert response.status_code == 401
    assert "Authorization header missing" in response.json()["detail"]

def test_invalid_token_rejected():
    """–¢–µ—Å—Ç: –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω –æ—Ç–∫–ª–æ–Ω—è–µ—Ç—Å—è"""
    headers = {"Authorization": "Bearer invalid-token"}
    response = client.get("/your-data", headers=headers)
    assert response.status_code == 401

@patch('your_service.core.auth.get_user_id_by_email_via_api_gateway')
def test_valid_token_accepted(mock_get_user_id):
    """–¢–µ—Å—Ç: –≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è"""
    mock_get_user_id.return_value = 1
    
    # –°–æ–∑–¥–∞–µ–º –≤–∞–ª–∏–¥–Ω—ã–π JWT —Ç–æ–∫–µ–Ω
    token = create_test_jwt_token({"sub": "test@example.com"})
    headers = {"Authorization": f"Bearer {token}"}
    
    response = client.get("/your-data", headers=headers)
    assert response.status_code == 200

def test_user_isolation():
    """–¢–µ—Å—Ç: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ"""
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    create_test_data(user_id=1, data="user1_data")
    create_test_data(user_id=2, data="user2_data")
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1 –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
    token1 = create_test_jwt_token({"sub": "user1@example.com"})
    response1 = client.get("/your-data", headers={"Authorization": f"Bearer {token1}"})
    assert len(response1.json()) == 1
    assert response1.json()[0]["data"] == "user1_data"
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
    token2 = create_test_jwt_token({"sub": "user2@example.com"})
    response2 = client.get("/your-data", headers={"Authorization": f"Bearer {token2}"})
    assert len(response2.json()) == 1
    assert response2.json()[0]["data"] == "user2_data"
```

### –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

#### **–í–°–ï–ì–î–ê:**
1. ‚úÖ –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –ë–î –ø–æ `user_id`
2. ‚úÖ –ü—Ä–æ–≤–µ—Ä—è—Ç—å JWT —Ç–æ–∫–µ–Ω –≤ –∫–∞–∂–¥–æ–º –∑–∞—â–∏—â–µ–Ω–Ω–æ–º endpoint
3. ‚úÖ –ü–æ–ª—É—á–∞—Ç—å JWT —Å–µ–∫—Ä–µ—Ç –∏–∑ Vault, –Ω–µ –∏–∑ .env
4. ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
5. ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–ª—è—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

#### **–ù–ò–ö–û–ì–î–ê:**
1. ‚ùå –ù–µ –¥–æ–≤–µ—Ä—è—Ç—å `user_id` –∏–∑ request parameters
2. ‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å JWT —Å–µ–∫—Ä–µ—Ç—ã –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ
3. ‚ùå –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö endpoints
4. ‚ùå –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
5. ‚ùå –ù–µ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å JWT —Ç–æ–∫–µ–Ω—ã –∏–ª–∏ —Å–µ–∫—Ä–µ—Ç—ã

### –ü—Ä–∏–º–µ—Ä—ã –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π

- **Integration Service**: `backend/integration-service/app/core/auth.py`
- **User Service**: `backend/user-service/main.py`
- **API Gateway**: `backend/api-gateway/main.py`

–≠—Ç–∏ —Ñ–∞–π–ª—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –ø–æ–ª–Ω—É—é —Ä–∞–±–æ—á—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –º–æ–≥—É—Ç —Å–ª—É–∂–∏—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–º –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.