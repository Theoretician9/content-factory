#!/usr/bin/env python3
import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL API Gateway
BASE_URL = "http://92.113.146.148:8000/api"

def test_logout_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø–æ—Ç–æ–∫ login -> logout"""
    print("üîê –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç logout —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
    
    # 1. –õ–æ–≥–∏–Ω–∏–º—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
    print("\n1. –í—ã–ø–æ–ª–Ω—è–µ–º –ª–æ–≥–∏–Ω...")
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º JSON —Ñ–æ—Ä–º–∞—Ç –∫–∞–∫ –≤ –≤–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
    login_data = {
        "username": "nikita.f3d@gmail.com", 
        "password": "LTB8T9pFhDiipYm"
    }
    
    try:
        login_response = requests.post(
            f"{BASE_URL}/auth/login",
            json=login_data,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º JSON –≤–º–µ—Å—Ç–æ form data
            headers={"Content-Type": "application/json"},
            timeout=10
        )
        
        print(f"Login response status: {login_response.status_code}")
        print(f"Login response headers: {dict(login_response.headers)}")
        print(f"Login response cookies: {dict(login_response.cookies)}")
        
        if login_response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {login_response.status_code} - {login_response.text}")
            return
        
        login_result = login_response.json()
        print(f"Login response body: {login_result}")
        
        access_token = login_result["access_token"]
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º cookies (–≤–∫–ª—é—á–∞—è refresh_token)
        cookies = login_response.cookies
        print(f"‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω, –ø–æ–ª—É—á–µ–Ω access_token: {access_token[:20]}...")
        print(f"‚úÖ Cookies: {dict(cookies)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ: {e}")
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É —Ä–µ—Å—É—Ä—Å—É
    print("\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ /auth/me...")
    headers = {"Authorization": f"Bearer {access_token}"}
    
    try:
        me_response = requests.get(f"{BASE_URL}/auth/me", headers=headers, timeout=10)
        print(f"Me response status: {me_response.status_code}")
        if me_response.status_code == 200:
            print(f"‚úÖ –î–æ—Å—Ç—É–ø –∫ /auth/me —Ä–∞–∑—Ä–µ—à–µ–Ω: {me_response.json()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ /auth/me: {me_response.status_code} - {me_response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ /auth/me: {e}")
    
    # 3. –í—ã–ø–æ–ª–Ω—è–µ–º logout
    print("\n3. –í—ã–ø–æ–ª–Ω—è–µ–º logout...")
    try:
        logout_response = requests.post(
            f"{BASE_URL}/auth/logout",
            headers=headers,
            cookies=cookies,
            timeout=10
        )
        
        print(f"Logout response status: {logout_response.status_code}")
        print(f"Logout response headers: {dict(logout_response.headers)}")
        print(f"Logout response cookies: {dict(logout_response.cookies)}")
        
        if logout_response.status_code == 200:
            print(f"‚úÖ Logout —É—Å–ø–µ—à–µ–Ω: {logout_response.json()}")
            # –û–±–Ω–æ–≤–ª—è–µ–º cookies –ø–æ—Å–ª–µ logout
            cookies.update(logout_response.cookies)
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ cookies: {dict(cookies)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ logout: {logout_response.status_code} - {logout_response.text}")
            return
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ logout: {e}")
        return
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ logout
    print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ /auth/me –ø–æ—Å–ª–µ logout...")
    try:
        me_response_after = requests.get(f"{BASE_URL}/auth/me", headers=headers, timeout=10)
        
        print(f"Me after logout response status: {me_response_after.status_code}")
        if me_response_after.status_code == 401:
            print("‚úÖ –î–æ—Å—Ç—É–ø –∫ /auth/me –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ logout (—Ç–æ–∫–µ–Ω –≤ blacklist)")
        elif me_response_after.status_code == 200:
            print("‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∫ /auth/me –≤—Å–µ –µ—â–µ —Ä–∞–∑—Ä–µ—à–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞)")
            print(f"Response: {me_response_after.json()}")
        else:
            print(f"‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {me_response_after.status_code} - {me_response_after.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ /auth/me –ø–æ—Å–ª–µ logout: {e}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π logout —Å —Ç–µ–º–∏ –∂–µ —Ç–æ–∫–µ–Ω–∞–º–∏
    print("\n5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π logout...")
    try:
        logout_response2 = requests.post(
            f"{BASE_URL}/auth/logout",
            headers=headers,
            cookies=cookies,
            timeout=10
        )
        
        print(f"Second logout response status: {logout_response2.status_code}")
        if logout_response2.status_code == 200:
            print(f"‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π logout –ø—Ä–æ—à–µ–ª: {logout_response2.json()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ logout: {logout_response2.status_code} - {logout_response2.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º logout: {e}")

if __name__ == "__main__":
    test_logout_flow() 